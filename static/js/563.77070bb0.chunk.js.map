{"version":3,"file":"static/js/563.77070bb0.chunk.js","mappings":"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","sources":["components/InfoModal/InfoModal.styled.jsx","components/InfoModal/InfoModal.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","components/RegisterForm/RegisterForm.styled.jsx","components/EmailModal/EmailModal.styled.js","components/EmailModal/EmailModal.jsx","components/RegisterForm/RegisterForm.jsx","pages/Public/RegisterPage/RegisterPage.jsx","redux/auth/firebase.js"],"sourcesContent":["import styled from '@emotion/styled/macro';\n\nexport const ConfirmBtn = styled.button`\n  width: 50%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: #3e85f3;\n  border-radius: 8px;\n  padding: 10px;\n  color: #fff;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 1.28;\n  border: 0;\n  cursor: pointer;\n\n  &:hover {\n    background: #2b78ef;\n    box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n    transition: background-color box-shadow 0.2s;\n  }\n`;\n\nexport const CancelBtn = styled.button`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: #efefef;\n  border-radius: 8px;\n  padding: 10px;\n  color: #111;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 1.28;\n  border: 0;\n  cursor: pointer;\n\n  &:hover {\n    box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n    transition: box-shadow 0.2s;\n  }\n`;\n\nexport const BtnWrapper = styled.div`\n  display: flex;\n  column-gap: 14px;\n  margin-bottom: 14px;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const TextDiv = styled.div`\n  margin-top: 14px;\n  margin-bottom: 14px;\n  text-align: center;\n  color: #343434;\n  font-family: Inter;\n  font-size: 14px;\n  font-weight: 600;\n  padding: 14px 0;\n`;\n","import { ConfirmBtn, BtnWrapper, TextDiv } from './InfoModal.styled';\n// import Checkmark from 'components/TaskForm/Checkmark/Checkmark';\n// import { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectTheme } from 'redux/header/headerSlice';\n\nconst InfoModal = ({ message, closeModal }) => {\n  const theme = useSelector(selectTheme);\n\n  const handleClick = () => {\n    closeModal();\n  };\n\n  return (\n    <>\n      <>\n        <TextDiv\n          style={theme === 'dark' ? { color: '#fff' } : { color: '#000' }}\n        >\n          {message}\n        </TextDiv>\n        <BtnWrapper>\n          <ConfirmBtn onClick={handleClick}>OK</ConfirmBtn>\n        </BtnWrapper>\n      </>\n    </>\n  );\n};\n\nexport default InfoModal;\n","import styled from '@emotion/styled';\n\nexport const ModalBackdrop = styled.div`\n  position: fixed;\n  z-index: 4;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  width: 100%;\n  height: 100vh;\n\n  background-color: #f7f6f960;\n`;\n\nexport const ModalContainer = styled.div`\n  position: fixed;\n  z-index: 5;\n  box-sizing: border-box;\n  min-width: 240px;\n  padding: 14px;\n  top: 50%;\n  left: 50%;\n\n  transform: translate(-50%, -50%);\n  background-color: ${({ bg }) => bg || '#fff'};\n  border-radius: 8px;\n  border: 1px solid rgba(220, 227, 229, 0.8);\n  box-shadow: 0px 4px 16px 0px rgba(17, 17, 17, 0.1);\n\n  @media screen and (max-width: 767px) {\n    max-width: 365px;\n  }\n\n  @media screen and (min-width: 768px) {\n    max-width: 468px;\n    padding: 18px;\n  }\n`;\n\nexport const CloseBtnContainer = styled.div`\n  text-align: right;\n`;\n\nexport const CloseBtn = styled.button`\n  padding: 0;\n  border: 0;\n  margin: 0;\n  width: 24px;\n  height: 24px;\n  /* background-color: white; */\n  background-color: ${({ bg }) => bg || '#fff'};\n  cursor: pointer;\n  &:hover {\n    box-shadow: 0px 4px 16px 0px rgba(17, 17, 17, 0.1);\n  }\n`;\n","import React, { useEffect } from 'react';\n\nimport PropTypes from 'prop-types';\nimport {\n  ModalBackdrop,\n  ModalContainer,\n  CloseBtnContainer,\n  CloseBtn,\n} from './Modal.styled';\nimport sprite from '../Pictures/sprite.svg';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectTheme } from 'redux/header/headerSlice';\n\nconst Modal = ({ closeModal, children }) => {\n  const dispatch = useDispatch();\n  const theme = useSelector(selectTheme);\n  useEffect(() => {\n    document.body.style.overflow = 'hidden';\n\n    const handleKeyDown = event => {\n      if (event.code === 'Escape') {\n        closeModal();\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      document.body.style.overflow = 'unset';\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [dispatch, closeModal]);\n\n  return (\n    <ModalBackdrop\n      onClick={() => {\n        closeModal();\n      }}\n    >\n      <ModalContainer\n        onClick={e => e.stopPropagation()}\n        bg={theme !== 'dark' ? '#fff' : 'var(--color-theme-dark)'}\n      >\n        <CloseBtnContainer onClick={closeModal}>\n          <CloseBtn bg={theme !== 'dark' ? '#fff' : 'var(--color-theme-dark)'}>\n            <svg\n              width=\"24\"\n              height=\"24\"\n              stroke={theme === 'dark' ? '#fff' : '#000'}\n            >\n              <use href={sprite + '#close-btn'}></use>\n            </svg>\n          </CloseBtn>\n        </CloseBtnContainer>\n        {children}\n      </ModalContainer>\n    </ModalBackdrop>\n  );\n};\n\nModal.propTypes = {\n  closeModal: PropTypes.func.isRequired,\n  children: PropTypes.object.isRequired,\n};\n\nexport default Modal;\n","import styled from '@emotion/styled';\nimport { Field, Form } from 'formik';\nimport { NavLink } from 'react-router-dom';\n\nconst styledForm = Form;\nconst styledField = Field;\nconst navLink = NavLink;\n\nexport const PageContainer = styled.div`\n  position: relative;\n  height: 100vh;\n  padding-left: 20px;\n  padding-right: 20px;\n  margin-left: auto;\n  margin-right: auto;\n  background-color: #dcebf7;\n  overflow: hidden;\n`;\n\nexport const FormPosition = styled.div`\n  width: 100%;\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nexport const RegisterContainer = styled.div`\n  padding: 24px 24px;\n  margin-left: auto;\n  margin-right: auto;\n  background-color: #ffffff;\n  border-radius: 8px;\n  @media screen and (min-width: 335px) and (max-width: 767px) {\n    box-sizing: border-box;\n    max-width: 335px;\n  }\n  @media screen and (min-width: 768px) {\n    box-sizing: border-box;\n    max-width: 480px;\n    padding: 40px 40px;\n  }\n`;\n\nexport const FormTitle = styled.h1`\n  margin-bottom: 32px;\n  font-family: Inter;\n  font-size: 18px;\n  font-weight: 600;\n  line-height: 1.33;\n  color: #3e85f3;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 40px;\n    font-size: 24px;\n  }\n`;\n\nexport const BoxInput = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 24px;\n  position: relative;\n`;\n\nexport const FormStyled = styled(styledForm)`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const FormLabel = styled.label`\n  margin-bottom: 8px;\n  font-family: Inter;\n  font-size: 12px;\n  font-weight: 600;\n  line-height: 1.29;\n  color: #111111;\n\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n  }\n`;\n\nexport const FormField = styled(styledField)`\n  position: 'relative';\n\n  padding-top: 14px;\n  padding-bottom: 14px;\n  padding-left: 14px;\n  margin-bottom: 4px;\n\n  font-family: Inter;\n  font-size: 14px;\n  font-weight: 400;\n  color: #111111;\n  background-color: #ffffff;\n  border-radius: 8px;\n  border: 1px solid #dce3e599;\n  border-color: ${({ state }) => {\n    if (state) {\n      const { touched, isValid } = state;\n      if (touched && isValid) return '#3CBC81';\n      if (touched && !isValid) return '#E74A3B';\n    }\n\n    return '#dce3e599';\n  }};\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n    margin-bottom: 8px;\n  }\n\n  ::placeholder {\n    color: #dce3e5;\n  }\n`;\n\nexport const CorrectInput = styled.p`\n  font-family: Inter;\n  font-size: 12px;\n  font-weight: 400;\n  color: #3cbc81;\n`;\n\nexport const Error = styled.p`\n  font-family: Inter;\n  font-size: 12px;\n  font-weight: 400;\n  color: #e74a3b;\n\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n  }\n`;\n\nexport const InputIconName = styled.div`\n  position: absolute;\n  top: 40%;\n  left: 88%;\n`;\n\nexport const InputIconEmail = styled.div`\n  position: absolute;\n  top: 40%;\n  left: 88%;\n`;\n\nexport const InputIconPassword = styled.div`\n  position: absolute;\n  top: 40%;\n  left: 88%;\n`;\n\nexport const RegButton = styled.button`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 8px;\n  padding: 14px 0;\n  border: 1px solid transparent;\n  border-radius: 16px;\n  box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n  font-size: 14px;\n  background-color: #3e85f3;\n  color: #ffffff;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #2b78ef;\n  }\n  &:focus {\n    background-color: #2b78ef;\n  }\n\n  @media screen and (min-width: 768px) {\n    margin-top: 30px;\n    font-size: 18px;\n  }\n`;\n\nexport const GoogleBtn = styled.button`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 8px;\n  padding: 14px 0;\n  border: 1px solid transparent;\n  border-radius: 16px;\n  box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n  font-size: 14px;\n  background-color: #3e85f3;\n  color: #ffffff;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #2b78ef;\n  }\n  &:focus {\n    background-color: #2b78ef;\n  }\n\n  @media screen and (min-width: 768px) {\n    margin-top: 15px;\n    font-size: 18px;\n  }\n`;\n\nexport const LogIn = styled(navLink)`\n  display: block;\n  margin-top: 18px;\n  text-align: center;\n  font-family: Inter;\n  font-size: 12px;\n  font-weight: 600;\n  line-height: 1.17;\n  color: #3e85f3;\n  text-decoration: underline;\n\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n  }\n`;\n\nexport const ImagePosition = styled.div`\n  position: relative;\n  max-width: 480px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const Image = styled.img`\n  @media screen and (max-width: 1439px) {\n    display: none;\n  }\n\n  @media screen and (min-width: 1440px) {\n    position: absolute;\n    bottom: -90px;\n    right: 520px;\n    width: 368px;\n    height: auto;\n    overflow: hidden;\n  }\n`;\n","import styled from '@emotion/styled/macro';\n\nexport const ConfirmBtn = styled.button`\n  width: 50%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: #3e85f3;\n  border-radius: 8px;\n  padding: 10px;\n  color: #fff;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 1.28;\n  border: 0;\n  cursor: pointer;\n\n  &:hover {\n    background: #2b78ef;\n    box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n    transition: background-color box-shadow 0.2s;\n  }\n`;\n\nexport const CancelBtn = styled.button`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: #efefef;\n  border-radius: 8px;\n  padding: 10px;\n  color: #111;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 1.28;\n  border: 0;\n  cursor: pointer;\n\n  &:hover {\n    box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n    transition: box-shadow 0.2s;\n  }\n`;\n\nexport const BtnWrapper = styled.div`\n  display: flex;\n  column-gap: 14px;\n  margin-bottom: 14px;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const TextDiv = styled.div`\n  margin-top: 14px;\n  margin-bottom: 14px;\n  text-align: center;\n  color: #343434;\n  font-family: Inter;\n  font-size: 14px;\n  font-weight: 600;\n  padding: 14px 0;\n`;\n\nexport const IconWrapper = styled.div`\n  position: absolute;\n  top: 20%;\n  left: 85%;\n`;\n","import { useState } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport {\n  ConfirmBtn,\n  BtnWrapper,\n  TextDiv,\n  IconWrapper,\n} from './EmailModal.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectTheme } from 'redux/header/headerSlice';\nimport { MdErrorOutline } from 'react-icons/md';\nimport { AiOutlineCheckCircle } from 'react-icons/ai';\nimport {\n  BoxInput,\n  CorrectInput,\n  Error,\n  FormField,\n  FormStyled,\n} from 'components/RegisterForm/RegisterForm.styled';\nimport { selectError, selectIsLoading } from 'redux/auth/authSelectors';\nimport { resendEmail } from 'redux/auth/authOperations';\n\nconst EmailModal = () => {\n  const [hasSubmitted, setHasSubmitted] = useState(false);\n  const isLoading = useSelector(selectIsLoading);\n\n  const authError = useSelector(selectError);\n  const dispatch = useDispatch();\n\n  const Submit = ({ subEmail }) => {\n    dispatch(resendEmail({ email: subEmail }));\n    setHasSubmitted(true);\n  };\n\n  let emailSchema = Yup.object().shape({\n    subEmail: Yup.string()\n      .trim()\n      .matches(\n        /^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/,\n        'Invalid email. Valid email contain xxx@xxx.xxx'\n      )\n      .required('Email is required field'),\n  });\n\n  const theme = useSelector(selectTheme);\n  return (\n    <>\n      {(!hasSubmitted || (hasSubmitted && isLoading)) && (\n        <>\n          <TextDiv\n            style={theme === 'dark' ? { color: '#fff' } : { color: '#000' }}\n          >\n            Please enter your email\n          </TextDiv>\n\n          <Formik\n            initialValues={{ subEmail: '' }}\n            validationSchema={emailSchema}\n            validateOnBlur={true}\n            validateOnChange={false}\n            onSubmit={Submit}\n          >\n            {({ errors, isValid, touched }) => (\n              <FormStyled>\n                <BoxInput>\n                  <>\n                    <FormField\n                      state={{ isValid, touched: touched.subEmail }}\n                      id=\"subEmail\"\n                      type=\"text\"\n                      name=\"subEmail\"\n                      placeholder=\"Enter email\"\n                      aria-required=\"true\"\n                      aria-invalid={!!errors.subEmail}\n                      aria-describedby=\"subEmailError\"\n                    />\n                    {touched.subEmail && !isValid && (\n                      <>\n                        <Error id=\"subEmailError\">{errors.subEmail}</Error>\n                        <IconWrapper>\n                          <MdErrorOutline size={24} color=\"#E74A3B\" />\n                        </IconWrapper>\n                      </>\n                    )}\n                    {touched.subEmail && isValid && (\n                      <>\n                        <CorrectInput>This is a CORRECT email</CorrectInput>\n                        <IconWrapper>\n                          <AiOutlineCheckCircle size={24} color=\"#3CBC81\" />\n                        </IconWrapper>\n                      </>\n                    )}\n                  </>\n                </BoxInput>\n\n                <BtnWrapper>\n                  <ConfirmBtn type=\"submit\">Submit</ConfirmBtn>\n                </BtnWrapper>\n              </FormStyled>\n            )}\n          </Formik>\n        </>\n      )}\n      {hasSubmitted && !isLoading && (\n        <TextDiv\n          style={theme === 'dark' ? { color: '#fff' } : { color: '#000' }}\n        >\n          {authError ? authError : 'Email has been sent'}\n        </TextDiv>\n      )}\n    </>\n  );\n};\n\nexport default EmailModal;\n","import { Formik } from 'formik';\nimport { FiLogIn } from 'react-icons/fi';\nimport { MdErrorOutline } from 'react-icons/md';\nimport { AiOutlineCheckCircle } from 'react-icons/ai';\nimport {\n  Error,\n  FormField,\n  FormLabel,\n  FormStyled,\n  FormTitle,\n  LogIn,\n  RegButton,\n  RegisterContainer,\n  BoxInput,\n  Image,\n  FormPosition,\n  PageContainer,\n  ImagePosition,\n  CorrectInput,\n  InputIconName,\n  InputIconEmail,\n  InputIconPassword,\n  GoogleBtn,\n} from './RegisterForm.styled';\nimport * as Yup from 'yup';\nimport { GoogleAuthProvider, getAuth, signInWithPopup } from 'firebase/auth';\nimport { app } from '../../redux/auth/firebase';\n\nimport IMG from '../Pictures/singup_goose.jpg';\n\nimport { register } from 'redux/auth/authOperations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectError, selectIsLoading } from 'redux/auth/authSelectors';\nimport { Circles } from 'react-loader-spinner';\nimport { useState } from 'react';\nimport Modal from 'components/Modal/Modal';\nimport InfoModal from 'components/InfoModal/InfoModal';\nimport EmailModal from 'components/EmailModal/EmailModal';\n\nconst RegisterForm = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const regError = useSelector(selectError);\n  const [isGoogle, setIsGoogle] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const [isOpenEmailModal, setIsOpenEmailModal] = useState(false);\n\n  const closeModal = () => setShowModal(false);\n\n  const toggleEmailModal = () => setIsOpenEmailModal(!isOpenEmailModal);\n\n  const message =\n    'To complete the registration process, please check your mailbox';\n\n  let userSchema = Yup.object().shape({\n    username: Yup.string()\n      .trim()\n      .min(4, 'Name is too short - should be 4 chars minimum.')\n      .max(20, 'Name is too long - should be 20 chars maximum.')\n      .required('Name is required field'),\n    email: Yup.string()\n      .trim()\n      .matches(\n        /^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/,\n        'Invalid email. Valid email contain xxx@xxx.xxx'\n      )\n      .required('Email is required field'),\n    password: Yup.string()\n      .trim()\n      .min(8, 'Password should be 8 chars minimum.')\n      .max(20, 'Password should be 20 chars maximum')\n      .required('Password is required field'),\n  });\n\n  const GoogleAuth = async () => {\n    const auth = getAuth(app);\n    const googleAuthProvider = new GoogleAuthProvider().addScope('email');\n    try {\n      const { user } = await signInWithPopup(auth, googleAuthProvider);\n      const googleUser = {\n        username: user.providerData[0].displayName,\n        email: user.providerData[0].email,\n        password: user.providerData[0].uid,\n        token: user.accessToken,\n      };\n      dispatch(register(googleUser));\n      setShowModal(true);\n      setIsGoogle(true);\n      //\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const onSubmit = (values, { resetForm }) => {\n    dispatch(register(values));\n    setShowModal(true);\n    setIsGoogle(false);\n\n    resetForm();\n  };\n\n  return (\n    <PageContainer>\n      <FormPosition>\n        <RegisterContainer>\n          <FormTitle>Sign Up</FormTitle>\n          <Formik\n            initialValues={{ username: '', email: '', password: '' }}\n            validationSchema={userSchema}\n            validateOnBlur={false}\n            validateOnChange={false}\n            onSubmit={async (values, API) => {\n              onSubmit(values, API);\n            }}\n          >\n            {({ errors, isValid }) => (\n              <FormStyled>\n                <BoxInput>\n                  {!isValid ? (\n                    <FormLabel\n                      style={\n                        errors.username\n                          ? { color: '#E74A3B' }\n                          : { color: '#3CBC81' }\n                      }\n                      htmlFor=\"username\"\n                    >\n                      Name\n                    </FormLabel>\n                  ) : (\n                    <FormLabel htmlFor=\"username\">Name</FormLabel>\n                  )}\n\n                  {!isValid ? (\n                    <>\n                      <FormField\n                        style={\n                          errors.username\n                            ? { borderColor: '#E74A3B', position: 'relative' }\n                            : { borderColor: '#3CBC81', position: 'relative' }\n                        }\n                        id=\"username\"\n                        type=\"text\"\n                        name=\"username\"\n                        placeholder=\"Enter your name\"\n                        aria-required=\"true\"\n                        aria-invalid={!!errors.username}\n                        aria-describedby=\"usernameError\"\n                      />\n                      {errors.username ? (\n                        <>\n                          <Error id=\"usernameError\">{errors.username}</Error>\n                          <InputIconName>\n                            <MdErrorOutline size={24} color=\"#E74A3B\" />\n                          </InputIconName>\n                        </>\n                      ) : (\n                        <>\n                          <CorrectInput>This is a CORRECT name</CorrectInput>\n                          <InputIconName>\n                            <AiOutlineCheckCircle size={24} color=\"#3CBC81\" />\n                          </InputIconName>\n                        </>\n                      )}\n                    </>\n                  ) : (\n                    <>\n                      <FormField\n                        id=\"username\"\n                        type=\"text\"\n                        name=\"username\"\n                        placeholder=\"Enter your name\"\n                        aria-required=\"true\"\n                        aria-invalid={!!errors.username}\n                        aria-describedby=\"usernameError\"\n                      />\n                    </>\n                  )}\n                </BoxInput>\n\n                <BoxInput>\n                  {!isValid ? (\n                    <FormLabel\n                      style={\n                        errors.email\n                          ? { color: '#E74A3B' }\n                          : { color: '#3CBC81' }\n                      }\n                      htmlFor=\"email\"\n                    >\n                      Email\n                    </FormLabel>\n                  ) : (\n                    <FormLabel htmlFor=\"email\">Email</FormLabel>\n                  )}\n\n                  {!isValid ? (\n                    <>\n                      <FormField\n                        style={\n                          errors.email\n                            ? {\n                                borderColor: '#E74A3B',\n                                backgroundColor: '#FFFFFF',\n                                position: 'relative',\n                              }\n                            : {\n                                borderColor: '#3CBC81',\n                                backgroundColor: '#FFFFFF',\n                                position: 'relative',\n                              }\n                        }\n                        id=\"email\"\n                        type=\"text\"\n                        name=\"email\"\n                        placeholder=\"Enter email\"\n                        aria-required=\"true\"\n                        aria-invalid={!!errors.email}\n                        aria-describedby=\"emailError\"\n                      />\n                      {errors.email ? (\n                        <>\n                          <Error id=\"emailError\">{errors.email}</Error>\n                          <InputIconEmail>\n                            <MdErrorOutline size={24} color=\"#E74A3B\" />\n                          </InputIconEmail>\n                        </>\n                      ) : (\n                        <>\n                          <CorrectInput>This is a CORRECT email</CorrectInput>\n                          <InputIconEmail>\n                            <AiOutlineCheckCircle size={24} color=\"#3CBC81\" />\n                          </InputIconEmail>\n                        </>\n                      )}\n                    </>\n                  ) : (\n                    <>\n                      <FormField\n                        id=\"email\"\n                        type=\"text\"\n                        name=\"email\"\n                        placeholder=\"Enter email\"\n                        aria-required=\"true\"\n                        aria-invalid={!!errors.email}\n                        aria-describedby=\"emailError\"\n                      />\n                    </>\n                  )}\n                </BoxInput>\n\n                <BoxInput>\n                  {!isValid ? (\n                    <FormLabel\n                      style={\n                        errors.password\n                          ? { color: '#E74A3B' }\n                          : { color: '#3CBC81' }\n                      }\n                      htmlFor=\"password\"\n                    >\n                      Password\n                    </FormLabel>\n                  ) : (\n                    <FormLabel htmlFor=\"password\">Password</FormLabel>\n                  )}\n\n                  {!isValid ? (\n                    <>\n                      <FormField\n                        style={\n                          errors.password\n                            ? {\n                                borderColor: '#E74A3B',\n                                backgroundColor: '#FFFFFF',\n                                position: 'relative',\n                              }\n                            : {\n                                borderColor: '#3CBC81',\n                                backgroundColor: '#FFFFFF',\n                                position: 'relative',\n                              }\n                        }\n                        id=\"password\"\n                        type=\"password\"\n                        name=\"password\"\n                        placeholder=\"Enter password\"\n                        aria-required=\"true\"\n                        aria-invalid={!!errors.password}\n                        aria-describedby=\"passwordError\"\n                      />\n                      {errors.password ? (\n                        <>\n                          <Error id=\"passwordError\">{errors.password}</Error>\n                          <InputIconPassword>\n                            <MdErrorOutline size={24} color=\"#E74A3B\" />\n                          </InputIconPassword>\n                        </>\n                      ) : (\n                        <>\n                          <CorrectInput>\n                            This is a CORRECT password\n                          </CorrectInput>\n                          <InputIconPassword>\n                            <AiOutlineCheckCircle size={24} color=\"#3CBC81\" />\n                          </InputIconPassword>\n                        </>\n                      )}\n                    </>\n                  ) : (\n                    <>\n                      <FormField\n                        id=\"password\"\n                        type=\"password\"\n                        name=\"password\"\n                        placeholder=\"Enter password\"\n                        aria-required=\"true\"\n                        aria-invalid={!!errors.password}\n                        aria-describedby=\"passwordError\"\n                      />\n                    </>\n                  )}\n                </BoxInput>\n\n                {isLoading ? (\n                  <div style={{ marginLeft: 'auto', marginRight: 'auto' }}>\n                    <Circles\n                      height=\"80\"\n                      width=\"80\"\n                      color=\"#3E85F3\"\n                      ariaLabel=\"circles-loading\"\n                      wrapperStyle={{}}\n                      wrapperClass=\"\"\n                      visible={true}\n                    />\n                  </div>\n                ) : (\n                  <>\n                    <RegButton type=\"submit\" disabled={isLoading}>\n                      Sign up <FiLogIn style={{ marginLeft: 11 }} />\n                    </RegButton>\n                    <GoogleBtn\n                      type=\"button\"\n                      onClick={GoogleAuth}\n                      disabled={isLoading}\n                    >\n                      Sign up with Google 🚀{' '}\n                    </GoogleBtn>\n                    <RegButton\n                      type=\"button\"\n                      onClick={toggleEmailModal}\n                      disabled={isLoading}\n                    >\n                      Resend verification email\n                    </RegButton>\n                  </>\n                )}\n              </FormStyled>\n            )}\n          </Formik>\n        </RegisterContainer>\n        <ImagePosition>\n          <LogIn to=\"/login\">Log In</LogIn>\n          <Image\n            srcSet={`\n            ${require('../Pictures/singup_goose.jpg')} 1x,\n            ${require('../Pictures/singup_goose2x.jpg')} 2x\n          `}\n            src={IMG}\n            alt=\"Goose\"\n          />\n        </ImagePosition>\n      </FormPosition>\n      {showModal && regError && !isLoading && (\n        <Modal closeModal={closeModal}>\n          <InfoModal message={regError} closeModal={closeModal} />\n        </Modal>\n      )}\n      {showModal && !regError && !isGoogle && !isLoading && (\n        <Modal closeModal={closeModal}>\n          <InfoModal message={message} closeModal={closeModal} />\n        </Modal>\n      )}\n      {isOpenEmailModal && (\n        <Modal closeModal={toggleEmailModal}>\n          <EmailModal />\n        </Modal>\n      )}\n    </PageContainer>\n  );\n};\n\nexport default RegisterForm;\n","import React from 'react';\n// import { Circles } from 'react-loader-spinner'; //! Спинер\nimport RegisterForm from '../../../components/RegisterForm/RegisterForm.jsx';\n\nconst RegisterPage = () => {\n  return <RegisterForm></RegisterForm>;\n};\n\nexport default RegisterPage;\n\n// {isLoading && !error && (\n//     <Circles\n//       height=\"80\"\n//       width=\"80\"\n//       color=\"#4d78a9\"\n//!       wrapperClass={css.loader}\n//     />\n//   )}\n\n// .loader {\n//     position: fixed;\n//     top: 0;\n//     width: 100%;\n//     height: 100%;\n//     display: flex;\n//     align-items: center;\n//     justify-content: center;\n//   }\n","import { initializeApp } from 'firebase/app';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBEgrHUWZSQaIHXbvdDYaU2gnwhximhORc\",\n  authDomain: 'goose-track-final-project-goit.firebaseapp.com',\n  projectId: 'goose-track-final-project-goit',\n  storageBucket: 'goose-track-final-project-goit.appspot.com',\n  messagingSenderId: '726960774734',\n  appId: '1:726960774734:web:576c405ee449fbe4e26d1f',\n};\n\n\nexport const app = initializeApp(firebaseConfig);\n"],"names":["ConfirmBtn","_styled","target","name","styles","BtnWrapper","TextDiv","_ref","message","closeModal","theme","useSelector","selectTheme","_jsx","_Fragment","children","_jsxs","style","color","onClick","ModalBackdrop","styled","_templateObject","_taggedTemplateLiteral","ModalContainer","_templateObject2","bg","CloseBtnContainer","_templateObject3","CloseBtn","_templateObject4","_ref2","dispatch","useDispatch","useEffect","document","body","overflow","handleKeyDown","event","code","window","addEventListener","removeEventListener","e","stopPropagation","width","height","stroke","href","sprite","styledForm","Form","styledField","Field","navLink","NavLink","PageContainer","FormPosition","RegisterContainer","FormTitle","BoxInput","_templateObject5","FormStyled","_templateObject6","FormLabel","_templateObject7","FormField","_templateObject8","state","touched","isValid","CorrectInput","_templateObject9","Error","_templateObject10","InputIconName","_templateObject11","InputIconEmail","_templateObject12","InputIconPassword","_templateObject13","RegButton","_templateObject14","GoogleBtn","_templateObject15","LogIn","_templateObject16","ImagePosition","_templateObject17","Image","_templateObject18","IconWrapper","_useState","useState","_useState2","_slicedToArray","hasSubmitted","setHasSubmitted","isLoading","selectIsLoading","authError","selectError","emailSchema","Yup","shape","subEmail","trim","matches","required","Formik","initialValues","validationSchema","validateOnBlur","validateOnChange","onSubmit","resendEmail","email","errors","id","type","placeholder","MdErrorOutline","size","AiOutlineCheckCircle","regError","isGoogle","setIsGoogle","_useState3","_useState4","showModal","setShowModal","_useState5","_useState6","isOpenEmailModal","setIsOpenEmailModal","toggleEmailModal","userSchema","username","min","max","password","GoogleAuth","_asyncToGenerator","_regeneratorRuntime","_callee","auth","googleAuthProvider","_yield$signInWithPopu","user","googleUser","_context","prev","next","getAuth","app","GoogleAuthProvider","addScope","signInWithPopup","sent","providerData","displayName","uid","token","accessToken","register","t0","console","log","stop","apply","arguments","values","resetForm","_ref3","_callee2","API","_context2","_x","_x2","_ref4","htmlFor","borderColor","position","backgroundColor","marginLeft","marginRight","Circles","ariaLabel","wrapperStyle","wrapperClass","visible","disabled","FiLogIn","to","srcSet","concat","require","src","IMG","alt","Modal","InfoModal","EmailModal","RegisterForm","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId"],"sourceRoot":""}