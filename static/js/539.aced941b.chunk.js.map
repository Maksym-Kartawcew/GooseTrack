{"version":3,"file":"static/js/539.aced941b.chunk.js","mappings":"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","sources":["components/InfoModal/InfoModal.styled.jsx","components/InfoModal/InfoModal.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","components/LoginForm/LoginForm.styled.jsx","components/LoginForm/LoginForm.jsx","pages/Public/LoginPage/LoginPage.jsx","redux/auth/firebase.js"],"sourcesContent":["import styled from '@emotion/styled/macro';\n\nexport const ConfirmBtn = styled.button`\n  width: 50%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: #3e85f3;\n  border-radius: 8px;\n  padding: 10px;\n  color: #fff;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 1.28;\n  border: 0;\n  cursor: pointer;\n\n  &:hover {\n    background: #2b78ef;\n    box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n    transition: background-color box-shadow 0.2s;\n  }\n`;\n\nexport const CancelBtn = styled.button`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: #efefef;\n  border-radius: 8px;\n  padding: 10px;\n  color: #111;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 1.28;\n  border: 0;\n  cursor: pointer;\n\n  &:hover {\n    box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n    transition: box-shadow 0.2s;\n  }\n`;\n\nexport const BtnWrapper = styled.div`\n  display: flex;\n  column-gap: 14px;\n  margin-bottom: 14px;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const TextDiv = styled.div`\n  margin-top: 14px;\n  margin-bottom: 14px;\n  text-align: center;\n  color: #343434;\n  font-family: Inter;\n  font-size: 14px;\n  font-weight: 600;\n  padding: 14px 0;\n`;\n","import { ConfirmBtn, BtnWrapper, TextDiv } from './InfoModal.styled';\n// import Checkmark from 'components/TaskForm/Checkmark/Checkmark';\n// import { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectTheme } from 'redux/header/headerSlice';\n\nconst InfoModal = ({ message, closeModal }) => {\n  const theme = useSelector(selectTheme);\n\n  const handleClick = () => {\n    closeModal();\n  };\n\n  return (\n    <>\n      <>\n        <TextDiv\n          style={theme === 'dark' ? { color: '#fff' } : { color: '#000' }}\n        >\n          {message}\n        </TextDiv>\n        <BtnWrapper>\n          <ConfirmBtn onClick={handleClick}>OK</ConfirmBtn>\n        </BtnWrapper>\n      </>\n    </>\n  );\n};\n\nexport default InfoModal;\n","import styled from '@emotion/styled';\n\nexport const ModalBackdrop = styled.div`\n  position: fixed;\n  z-index: 4;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  width: 100%;\n  height: 100vh;\n\n  background-color: #f7f6f960;\n`;\n\nexport const ModalContainer = styled.div`\n  position: fixed;\n  z-index: 5;\n  box-sizing: border-box;\n  min-width: 240px;\n  padding: 14px;\n  top: 50%;\n  left: 50%;\n\n  transform: translate(-50%, -50%);\n  background-color: ${({ bg }) => bg || '#fff'};\n  border-radius: 8px;\n  border: 1px solid rgba(220, 227, 229, 0.8);\n  box-shadow: 0px 4px 16px 0px rgba(17, 17, 17, 0.1);\n\n  @media screen and (max-width: 767px) {\n    max-width: 365px;\n  }\n\n  @media screen and (min-width: 768px) {\n    max-width: 468px;\n    padding: 18px;\n  }\n`;\n\nexport const CloseBtnContainer = styled.div`\n  text-align: right;\n`;\n\nexport const CloseBtn = styled.button`\n  padding: 0;\n  border: 0;\n  margin: 0;\n  width: 24px;\n  height: 24px;\n  /* background-color: white; */\n  background-color: ${({ bg }) => bg || '#fff'};\n  cursor: pointer;\n  &:hover {\n    box-shadow: 0px 4px 16px 0px rgba(17, 17, 17, 0.1);\n  }\n`;\n","import React, { useEffect } from 'react';\n\nimport PropTypes from 'prop-types';\nimport {\n  ModalBackdrop,\n  ModalContainer,\n  CloseBtnContainer,\n  CloseBtn,\n} from './Modal.styled';\nimport sprite from '../Pictures/sprite.svg';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectTheme } from 'redux/header/headerSlice';\n\nconst Modal = ({ closeModal, children }) => {\n  const dispatch = useDispatch();\n  const theme = useSelector(selectTheme);\n  useEffect(() => {\n    document.body.style.overflow = 'hidden';\n\n    const handleKeyDown = event => {\n      if (event.code === 'Escape') {\n        closeModal();\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      document.body.style.overflow = 'unset';\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [dispatch, closeModal]);\n\n  return (\n    <ModalBackdrop\n      onClick={() => {\n        closeModal();\n      }}\n    >\n      <ModalContainer\n        onClick={e => e.stopPropagation()}\n        bg={theme !== 'dark' ? '#fff' : 'var(--color-theme-dark)'}\n      >\n        <CloseBtnContainer onClick={closeModal}>\n          <CloseBtn bg={theme !== 'dark' ? '#fff' : 'var(--color-theme-dark)'}>\n            <svg\n              width=\"24\"\n              height=\"24\"\n              stroke={theme === 'dark' ? '#fff' : '#000'}\n            >\n              <use href={sprite + '#close-btn'}></use>\n            </svg>\n          </CloseBtn>\n        </CloseBtnContainer>\n        {children}\n      </ModalContainer>\n    </ModalBackdrop>\n  );\n};\n\nModal.propTypes = {\n  closeModal: PropTypes.func.isRequired,\n  children: PropTypes.object.isRequired,\n};\n\nexport default Modal;\n","import styled from '@emotion/styled';\nimport { Field, Form } from 'formik';\nimport { NavLink } from 'react-router-dom';\n\nconst styledForm = Form;\nconst styledField = Field;\nconst navLink = NavLink;\n\nexport const PageContainer = styled.div`\n  position: relative;\n  height: 100vh;\n  padding-left: 20px;\n  padding-right: 20px;\n  margin-left: auto;\n  margin-right: auto;\n  background-color: #dcebf7;\n`;\n\nexport const FormPosition = styled.div`\n  width: 100%;\n  margin: 0;\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nexport const LoginContainer = styled.div`\n  position: relative;\n  padding: 40px 24px;\n  margin-left: auto;\n  margin-right: auto;\n  background-color: #ffffff;\n  border-radius: 8px;\n  overflow: hidden;\n  @media screen and (min-width: 180px) and (max-width: 767px) {\n    box-sizing: border-box;\n    max-width: 335px;\n  }\n\n  @media screen and (min-width: 768px) {\n    box-sizing: border-box;\n    max-width: 480px;\n    padding: 40px 40px;\n  }\n`;\n\nexport const FormTitle = styled.h1`\n  margin-bottom: 32px;\n  font-family: Inter;\n  font-size: 18px;\n  font-weight: 600;\n  line-height: 1.33;\n  color: #3e85f3;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 40px;\n    font-size: 24px;\n  }\n`;\n\nexport const FormStyled = styled(styledForm)`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const FormLabel = styled.label`\n  margin-bottom: 8px;\n  font-family: Inter;\n  font-size: 12px;\n  font-weight: 600;\n  line-height: 1.29;\n  color: #111111;\n\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n  }\n`;\n\nexport const BoxInput = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 24px;\n  position: relative;\n`;\n\nexport const FormField = styled(styledField)`\n  padding-top: 14px;\n  padding-bottom: 14px;\n  padding-left: 14px;\n  margin-bottom: 8px;\n  font-family: Inter;\n  font-size: 14px;\n  font-weight: 400;\n  color: #111111;\n  border-radius: 8px;\n  border: 1px solid #dce3e599;\n\n \n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n\n  ::placeholder {\n    color: #dce3e5;\n  }\n`;\n\nexport const InputIconEmail = styled.div`\n  position: absolute;\n  top: 40%;\n  left: 88%;\n`;\n\nexport const InputIconPassword = styled.div`\n  position: absolute;\n  top: 40%;\n  left: 88%;\n`;\n\nexport const CorrectInput = styled.p`\n  font-family: Inter;\n  font-size: 12px;\n  font-weight: 400;\n  color: #3cbc81;\n`;\n\nexport const Error = styled.p`\n  font-family: Inter;\n  font-size: 12px;\n  font-weight: 400;\n  color: red;\n\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n  }\n`;\n\nexport const LoginButton = styled.button`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 8px;\n  padding: 14px 0;\n  border-radius: 16px;\n  border: 1px solid transparent;\n  box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n  font-size: 14px;\n  background-color: #3e85f3;\n  color: #ffffff;\n  margin-left: auto;\n  margin-right: auto;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #2b78ef;\n  }\n  &:focus {\n    background-color: #2b78ef;\n  }\n\n  @media screen and (min-width: 768px) {\n    margin-top: 30px;\n    font-size: 18px;\n  }\n`;\n\nexport const GoogleBtn = styled.button`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 8px;\n  padding: 14px 0;\n  border: 1px solid transparent;\n  border-radius: 16px;\n  box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n  font-size: 14px;\n  background-color: #3e85f3;\n  color: #ffffff;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #2b78ef;\n  }\n  &:focus {\n    background-color: #2b78ef;\n  }\n\n  @media screen and (min-width: 768px) {\n    margin-top: 15px;\n    font-size: 18px;\n  }\n`;\n\nexport const ImagePosition = styled.div`\n  position: relative;\n  max-width: 480px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const SingUp = styled(navLink)`\n  display: block;\n  margin-top: 18px;\n  text-align: center;\n  font-family: Inter;\n  font-size: 12px;\n  font-weight: 600;\n  line-height: 1.17;\n  color: #3e85f3;\n  text-decoration: underline;\n\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n  }\n`;\n\nexport const Image = styled.img`\n  @media screen and (max-width: 1439px) {\n    display: none;\n  }\n\n  @media screen and (min-width: 1440px) {\n    position: absolute;\n    bottom: -100px;\n    left: 500px;\n    width: 368px;\n    height: 521px;\n  }\n`;\n","import React from 'react';\nimport { Formik } from 'formik';\nimport {\n  BoxInput,\n  Error,\n  FormField,\n  FormLabel,\n  FormPosition,\n  FormStyled,\n  FormTitle,\n  Image,\n  LoginButton,\n  LoginContainer,\n  PageContainer,\n  SingUp,\n  ImagePosition,\n  CorrectInput,\n  InputIconEmail,\n  InputIconPassword,\n  GoogleBtn,\n} from './LoginForm.styled';\nimport { MdErrorOutline } from 'react-icons/md';\nimport { AiOutlineCheckCircle } from 'react-icons/ai';\nimport { FiLogIn } from 'react-icons/fi';\nimport * as Yup from 'yup';\nimport { GoogleAuthProvider, getAuth, signInWithPopup } from 'firebase/auth';\nimport { app } from '../../redux/auth/firebase';\n\nimport IMG from '../Pictures/login_goose.jpg';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { login } from 'redux/auth/authOperations';\nimport { selectError, selectIsLoading } from 'redux/auth/authSelectors';\nimport { Circles } from 'react-loader-spinner';\nimport Modal from 'components/Modal/Modal';\nimport InfoModal from 'components/InfoModal/InfoModal';\nimport { useState } from 'react';\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const loginError = useSelector(selectError);\n  const [showModal, setShowModal] = useState(false);\n\n  const closeModal = () => setShowModal(false);\n\n  let userSchema = Yup.object().shape({\n    email: Yup.string()\n      .trim()\n      .matches(\n        /^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/,\n        'Invalid email. Valid email contain xxx@xxx.xxx'\n      )\n      .required('Email is required field'),\n    password: Yup.string()\n      .trim()\n      .min(8, 'Password should be 8 chars minimum.')\n      .max(20, 'Password should be 20 chars maximum')\n      .required('Password is required field'),\n  });\n\n  const googleLogin = async () => {\n    const auth = getAuth(app);\n    const googleAuthProvider = new GoogleAuthProvider().addScope('email');\n    try {\n      const result = await signInWithPopup(auth, googleAuthProvider);\n      const googleUser = {\n        email: result.user.providerData[0].email,\n        password: result.user.providerData[0].uid,\n      };\n      dispatch(login(googleUser));\n      setShowModal(true);\n    } catch (error) {}\n  };\n\n  const commonLogin = async values => {\n    dispatch(login(values));\n    setShowModal(true);\n  };\n\n  return (\n    <PageContainer>\n      <FormPosition>\n        <LoginContainer>\n          <FormTitle>Log In</FormTitle>\n          <Formik\n            initialValues={{ email: '', password: '' }}\n            validationSchema={userSchema}\n            validateOnChange={false}\n            validateOnBlur={false}\n            onSubmit={commonLogin}\n          >\n            {({ errors, isValid }) => (\n              <FormStyled>\n                <BoxInput>\n                  {!isValid ? (\n                    <FormLabel\n                      style={\n                        errors.email\n                          ? { color: '#E74A3B' }\n                          : { color: '#3CBC81' }\n                      }\n                      htmlFor=\"email\"\n                    >\n                      Email\n                    </FormLabel>\n                  ) : (\n                    <FormLabel htmlFor=\"email\">Email</FormLabel>\n                  )}\n\n                  {!isValid ? (\n                    <>\n                      <FormField\n                        style={\n                          errors.email\n                            ? {\n                                borderColor: '#E74A3B',\n                                backgroundColor: '#FFFFFF',\n                                position: 'relative',\n                              }\n                            : {\n                                borderColor: '#3CBC81',\n                                backgroundColor: '#FFFFFF',\n                                position: 'relative',\n                              }\n                        }\n                        id=\"email\"\n                        type=\"text\"\n                        name=\"email\"\n                        placeholder=\"Enter email\"\n                        aria-required=\"true\"\n                        aria-invalid={!!errors.email}\n                        aria-describedby=\"emailError\"\n                      />\n                      {errors.email ? (\n                        <>\n                          <Error id=\"emailError\">{errors.email}</Error>\n                          <InputIconEmail>\n                            <MdErrorOutline size={24} color=\"#E74A3B\" />\n                          </InputIconEmail>\n                        </>\n                      ) : (\n                        <>\n                          <CorrectInput>This is a CORRECT email</CorrectInput>\n                          <InputIconEmail>\n                            <AiOutlineCheckCircle size={24} color=\"#3CBC81\" />\n                          </InputIconEmail>\n                        </>\n                      )}\n                    </>\n                  ) : (\n                    <>\n                      <FormField\n                        id=\"email\"\n                        type=\"text\"\n                        name=\"email\"\n                        placeholder=\"Enter email\"\n                        aria-required=\"true\"\n                        aria-invalid={!!errors.email}\n                        aria-describedby=\"emailError\"\n                      />\n                    </>\n                  )}\n                </BoxInput>\n\n                <BoxInput>\n                  {!isValid ? (\n                    <FormLabel\n                      style={\n                        errors.password\n                          ? { color: '#E74A3B' }\n                          : { color: '#3CBC81' }\n                      }\n                      htmlFor=\"password\"\n                    >\n                      Password\n                    </FormLabel>\n                  ) : (\n                    <FormLabel htmlFor=\"password\">Password</FormLabel>\n                  )}\n                  {!isValid ? (\n                    <>\n                      <FormField\n                        style={\n                          errors.password\n                            ? {\n                                borderColor: '#E74A3B',\n                                backgroundColor: '#FFFFFF',\n                                position: 'relative',\n                              }\n                            : {\n                                borderColor: '#3CBC81',\n                                backgroundColor: '#FFFFFF',\n                                position: 'relative',\n                              }\n                        }\n                        id=\"password\"\n                        type=\"password\"\n                        name=\"password\"\n                        placeholder=\"Enter password\"\n                        aria-required=\"true\"\n                        aria-invalid={!!errors.password}\n                        aria-describedby=\"passwordError\"\n                      />\n                      {errors.password ? (\n                        <>\n                          <Error id=\"passwordError\">{errors.password}</Error>\n                          <InputIconPassword>\n                            <MdErrorOutline size={24} color=\"#E74A3B\" />\n                          </InputIconPassword>\n                        </>\n                      ) : (\n                        <>\n                          <CorrectInput>\n                            This is a CORRECT password\n                          </CorrectInput>\n                          <InputIconPassword>\n                            <AiOutlineCheckCircle size={24} color=\"#3CBC81\" />\n                          </InputIconPassword>\n                        </>\n                      )}\n                    </>\n                  ) : (\n                    <>\n                      <FormField\n                        id=\"password\"\n                        type=\"password\"\n                        name=\"password\"\n                        placeholder=\"Enter password\"\n                        aria-required=\"true\"\n                        aria-invalid={!!errors.password}\n                        aria-describedby=\"passwordError\"\n                      />\n                    </>\n                  )}\n                </BoxInput>\n\n                {isLoading ? (\n                  <div style={{ marginLeft: 'auto', marginRight: 'auto' }}>\n                    <Circles\n                      height=\"80\"\n                      width=\"80\"\n                      color=\"#3E85F3\"\n                      ariaLabel=\"circles-loading\"\n                      wrapperStyle={{}}\n                      wrapperClass=\"\"\n                      visible={true}\n                    />\n                  </div>\n                ) : (\n                  <>\n                    <LoginButton type=\"submit\" disabled={isLoading}>\n                      Log in <FiLogIn style={{ marginLeft: 11 }} />\n                    </LoginButton>\n                    <GoogleBtn\n                      type=\"button\"\n                      onClick={googleLogin}\n                      disabled={isLoading}\n                    >\n                      Sign in with Google 🚀{' '}\n                    </GoogleBtn>\n                  </>\n                )}\n              </FormStyled>\n            )}\n          </Formik>\n        </LoginContainer>\n        <ImagePosition>\n          <SingUp to=\"/register\">Sing up</SingUp>\n          <Image\n            srcSet={`\n            ${require('../Pictures/login_goose.jpg')} 1x,\n            ${require('../Pictures/login_goose@2x.jpg')} 2x\n            `}\n            src={IMG}\n            alt=\"Goose\"\n          />\n        </ImagePosition>\n      </FormPosition>\n      {showModal && loginError && !isLoading && (\n        <Modal closeModal={closeModal}>\n          <InfoModal message={loginError} closeModal={closeModal}></InfoModal>\n        </Modal>\n      )}\n    </PageContainer>\n  );\n};\n\nexport default LoginForm;\n","import React from 'react';\n// import { Circles } from 'react-loader-spinner'; //! Спинер\n\nimport LoginForm from '../../../components/LoginForm/LoginForm.jsx';\n\nconst LoginPage = () => {\n  return <LoginForm></LoginForm>;\n};\n\nexport default LoginPage;\n\n// {isLoading && !error && (\n//     <Circles\n//       height=\"80\"\n//       width=\"80\"\n//       color=\"#4d78a9\"\n//!       wrapperClass={css.loader}\n//     />\n//   )}\n\n// .loader {\n//     position: fixed;\n//     top: 0;\n//     width: 100%;\n//     height: 100%;\n//     display: flex;\n//     align-items: center;\n//     justify-content: center;\n//   }\n","import { initializeApp } from 'firebase/app';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBEgrHUWZSQaIHXbvdDYaU2gnwhximhORc\",\n  authDomain: 'goose-track-final-project-goit.firebaseapp.com',\n  projectId: 'goose-track-final-project-goit',\n  storageBucket: 'goose-track-final-project-goit.appspot.com',\n  messagingSenderId: '726960774734',\n  appId: '1:726960774734:web:576c405ee449fbe4e26d1f',\n};\n\n\nexport const app = initializeApp(firebaseConfig);\n"],"names":["ConfirmBtn","_styled","target","name","styles","BtnWrapper","TextDiv","_ref","message","closeModal","theme","useSelector","selectTheme","_jsx","_Fragment","children","_jsxs","style","color","onClick","ModalBackdrop","styled","_templateObject","_taggedTemplateLiteral","ModalContainer","_templateObject2","bg","CloseBtnContainer","_templateObject3","CloseBtn","_templateObject4","_ref2","dispatch","useDispatch","useEffect","document","body","overflow","handleKeyDown","event","code","window","addEventListener","removeEventListener","e","stopPropagation","width","height","stroke","href","sprite","styledForm","Form","styledField","Field","navLink","NavLink","PageContainer","FormPosition","LoginContainer","FormTitle","FormStyled","_templateObject5","FormLabel","_templateObject6","BoxInput","_templateObject7","FormField","_templateObject8","InputIconEmail","_templateObject9","InputIconPassword","_templateObject10","CorrectInput","_templateObject11","Error","_templateObject12","LoginButton","_templateObject13","GoogleBtn","_templateObject14","ImagePosition","_templateObject15","SingUp","_templateObject16","Image","_templateObject17","isLoading","selectIsLoading","loginError","selectError","_useState","useState","_useState2","_slicedToArray","showModal","setShowModal","userSchema","Yup","shape","email","trim","matches","required","password","min","max","googleLogin","_asyncToGenerator","_regeneratorRuntime","_callee","auth","googleAuthProvider","result","googleUser","_context","prev","next","getAuth","app","GoogleAuthProvider","addScope","signInWithPopup","sent","user","providerData","uid","login","t0","stop","apply","arguments","commonLogin","_callee2","values","_context2","_x","Formik","initialValues","validationSchema","validateOnChange","validateOnBlur","onSubmit","_ref3","errors","isValid","htmlFor","id","type","placeholder","borderColor","backgroundColor","position","MdErrorOutline","size","AiOutlineCheckCircle","marginLeft","marginRight","Circles","ariaLabel","wrapperStyle","wrapperClass","visible","disabled","FiLogIn","to","srcSet","concat","require","src","IMG","alt","Modal","InfoModal","LoginForm","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId"],"sourceRoot":""}