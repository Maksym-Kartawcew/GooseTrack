{"version":3,"file":"static/js/190.94294a2c.chunk.js","mappings":"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","sources":["components/DeleteForm/DeleteForm.styled.jsx","components/TaskForm/Checkmark/Checkmark.jsx","components/TaskForm/Checkmark/Checkmark.styled.jsx","helpers/ValidSchema.js","components/UserForm/UserForm.styled.jsx","components/UserForm/PreviewAvatar.js","components/UserForm/ConfirmationModal/ConfirmationModal.jsx","components/UserForm/DeletionModal/DeletionModal.styled.js","components/UserForm/DeletionModal/DeletionModal.jsx","components/UserForm/UserForm.jsx","pages/Private/AccountPage/AccountPage.jsx"],"sourcesContent":["import styled from '@emotion/styled/macro';\n\nexport const DeleteBtn = styled.button`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: #3e85f3;\n  border-radius: 8px;\n  padding: 10px;\n  color: #fff;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 1.28;\n  border: 0;\n  cursor: pointer;\n\n  &:hover {\n    background: #2b78ef;\n    box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n    transition: background-color box-shadow 0.2s;\n  }\n`;\n\nexport const CancelBtn = styled.button`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: #efefef;\n  border-radius: 8px;\n  padding: 10px;\n  color: #111;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 1.28;\n  border: 0;\n  cursor: pointer;\n\n  &:hover {\n    box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n    transition: box-shadow 0.2s;\n  }\n`;\n\nexport const BtnWrapper = styled.div`\n  display: flex;\n  column-gap: 14px;\n  margin-bottom: 14px;\n`;\n\nexport const TextDiv = styled.div`\n  margin-top: 14px;\n  margin-bottom: 14px;\n  text-align: center;\n  color: #343434;\n  font-family: Inter;\n  font-size: 14px;\n  font-weight: 600;\n`;\n","const { Path, Circle, Svg, CheckmarkWrap } = require('./Checkmark.styled');\n\nconst Checkmark = () => {\n  return (\n    <CheckmarkWrap>\n      <Svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 104 104\"\n        width=\"104\"\n        height=\"104\"\n      >\n        <Circle cx=\"52\" cy=\"52\" r=\"50\" fill=\"none\" />\n        <Path fill=\"none\" d=\"M28.2 54.2l14.2 14.4 33.4-33.6\" />\n      </Svg>\n    </CheckmarkWrap>\n  );\n};\n\nexport default Checkmark;\n","import styled, { keyframes } from 'styled-components';\n\nexport const CheckmarkWrap = styled.div`\n  box-sizing: border-box;\n  height: 258.39px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst strokeAnimation = keyframes`\n  100% {\n    stroke-dashoffset: 0;\n  }\n`;\n\nconst fillAnimation = keyframes`\n  100% {\n    box-shadow: inset 0px 0px 0px 30px #ffffff0;\n  }\n`;\n\nconst scaleAnimation = keyframes`\n  0%, 100% {\n    transform: none;\n  }\n  50% {\n    transform: scale3d(1.1, 1.1, 1);\n  }\n`;\n\nexport const Circle = styled.circle`\n  stroke-dasharray: 332;\n  stroke-dashoffset: 332;\n  stroke-width: 4;\n  stroke-miterlimit: 10;\n  stroke: green;\n  fill: none;\n  animation: ${strokeAnimation} 0.6s cubic-bezier(0.65, 0, 0.45, 1) forwards;\n`;\n\nexport const Svg = styled.svg`\n  display: block;\n  width: 112px;\n  height: 112px;\n  border-radius: 50%;\n  display: block;\n  stroke-width: 4;\n  stroke: green;\n  stroke-miterlimit: 10;\n  margin: 10% auto;\n  box-shadow: inset 0px 0px 0px #7ac142;\n  animation: ${fillAnimation} 0.4s ease-in-out 0.4s forwards,\n    ${scaleAnimation} 0.3s ease-in-out 0.9s both;\n`;\n\nexport const Path = styled.path`\n  transform-origin: 50% 50%;\n  stroke-dasharray: 96;\n  stroke-dashoffset: 96;\n  animation: ${strokeAnimation} 0.3s cubic-bezier(0.65, 0, 0.45, 1) 0.8s\n    forwards;\n`;\n","import * as Yup from 'yup';\nconst phoneRegExp =\n  '\\\\+?\\\\d{1,4}?[\\\\-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[\\\\-.\\\\s]?\\\\d{1,4}[\\\\-.\\\\s]?\\\\d{1,4}[\\\\-.\\\\s]?\\\\d{1,9}';\n\nconst ValidSchema = Yup.object().shape({\n  usrName: Yup.string()\n    .max(16, 'Must be 16 characters or less')\n    .required('Username is required'),\n  phone: Yup.string().matches(phoneRegExp, 'Wrong number'),\n  birthday: Yup.string(),\n  skype: Yup.string().max(16, 'Must be 16 characters or less'),\n  email: Yup.string()\n    .email('Invalid email address')\n    .required('Email is required'),\n});\n\nexport default ValidSchema;\n","import styled from 'styled-components';\nimport { AiFillPlusCircle } from 'react-icons/ai';\n\nexport const LabelAvatar = styled.label`\n  @media screen and (min-width: 768px) {\n    display: block;\n    width: 124px;\n    margin-right: auto;\n    margin-left: auto;\n  }\n`;\n\nexport const Icon = styled(AiFillPlusCircle)`\n  fill: #3e85f3;\n  width: 14px;\n  height: 14px;\n\n  @media screen and (min-width: 768px) {\n    width: 24px;\n    height: 24px;\n  }\n`;\n\nexport const Chevron = styled.svg`\n  cursor: pointer;\n  pointer-events: none;\n\n  @media screen and (min-width: 768px) {\n  }\n  @media screen and (min-width: 1440px) {\n  }\n`;\n\nexport const FormaBox = styled.form`\n  /* width: 100vh; */\n  height: 100vh;\n\n  /* padding: 95px 20px 40px 20px; */\n  /* background-color: #f7f6f9; */\n  @media screen and (min-width: 768px) {\n    /* padding: 64px 32px 38px 32px; */\n  }\n  @media screen and (min-width: 1440px) {\n    /* padding: 33px 32px 32px 32px; */\n  }\n`;\nexport const UserFormBox = styled.div`\n  width: 335px;\n  position: relative;\n\n  display: flex;\n  padding: 59px 18px 40px 18px;\n  flex-direction: column;\n  border-radius: 16px;\n  background: ${({ bg }) => bg || 'var(--color-choice-dark-no-active)'};\n  color: ${({ color }) => color || '#000'};\n\n  justify-content: center;\n  margin-left: auto;\n  margin-right: auto;\n  @media screen and (min-width: 768px) {\n    width: 704px;\n    padding: 40px 175px;\n  }\n  @media screen and (min-width: 1440px) {\n    width: 1087px;\n    padding: 60px 165px;\n  }\n`;\nexport const BoxForm = styled.div`\n  display: flex;\n  flex-direction: column;\n  column-gap: 50px;\n  row-gap: 24px;\n  box-sizing: border-box;\n  @media screen and (min-width: 1440px) {\n    height: 270px;\n    width: 758px;\n    flex-wrap: wrap;\n  }\n`;\n\nexport const Avatar = styled.img`\n  position: absolute;\n  left: 50%;\n  top: 0;\n  width: 72px;\n  height: 72px;\n  transform: translate(-50%, -50%);\n  border-radius: 50%;\n  display: block;\n  margin-right: auto;\n  margin-left: auto;\n  border: 2px solid #3e85f3;\n  cursor: pointer;\n\n  @media screen and (min-width: 768px) {\n    position: relative;\n    left: 0;\n    transform: translate(0, 0);\n    width: 124px;\n    height: 124px;\n  }\n`;\n\nexport const IconDiv = styled.button`\n  position: absolute;\n  top: 25px;\n  left: 52%;\n  z-index: 2;\n  cursor: pointer;\n  background-color: transparent;\n  border: none;\n  @media screen and (min-width: 768px) {\n    top: 150px;\n    left: 51%;\n  }\n  @media screen and (min-width: 1440px) {\n    top: 168px;\n    left: 51%;\n  }\n`;\nexport const WhiteBox = styled.div`\n  position: absolute;\n  top: 29.5px;\n  left: 53.2%;\n  width: 6px;\n  height: 6px;\n  background-color: #ffffff;\n  border-radius: 50%;\n  z-index: 1;\n  @media screen and (min-width: 768px) {\n    top: 156.5px;\n    left: 52%;\n    width: 10px;\n    height: 10px;\n  }\n  @media screen and (min-width: 1440px) {\n    top: 175px;\n    left: 51.7%;\n  }\n`;\nexport const UserName = styled.h1`\n  color: ${({ color }) => color || '#343434'};\n\n  font-family: Inter;\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 1; /* 100% */\n\n  margin: 0;\n  display: flex;\n  justify-content: center;\n\n  @media screen and (min-width: 768px) {\n    margin-top: 14px;\n  }\n  @media screen and (min-width: 1440px) {\n    margin-top: 20px;\n  }\n`;\n\nexport const User = styled.h2`\n  color: ${({ color }) => color || '#343434'};\n\n  font-family: Inter;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: 1.29; /* 128.571% */\n\n  margin-top: 8px;\n  margin-bottom: 40px;\n  display: flex;\n  justify-content: center;\n  @media screen and (min-width: 1440px) {\n    margin-bottom: 44px;\n  }\n`;\n\nexport const LabelUserForm = styled.label`\n  font-family: Inter;\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 1.17; /* 116.667% */\n  display: block;\n  margin-bottom: 8px;\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n    line-height: 1.29; /* 128.571% */\n  }\n`;\n\nexport const InputUserForm = styled.input`\n  box-sizing: border-box;\n  font-family: Inter;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: 1.29; /* 128.571% */\n  color: ${({ color }) => color || '#000'};\n  background: ${({ bg }) => bg || '#fff'};\n  padding: 12px 14px;\n  border-radius: 8px;\n  width: 100%;\n  border: 1px solid\n    ${({ bordercolor }) => bordercolor || 'rgba(17, 17, 17, 0.1)'};\n\n  @media screen and (min-width: 768px) {\n    padding: 13px 18px;\n    width: 354px;\n    font-size: 16px;\n    line-height: 1.12; /* 112.5% */\n  }\n  @media screen and (min-width: 1440px) {\n    width: 354px;\n  }\n`;\n\nexport const BtnUserForm = styled.button`\n  width: 195px;\n  height: 46px;\n\n  display: flex;\n  cursor: pointer;\n  justify-content: center;\n  align-items: center;\n  margin-left: auto;\n  margin-right: auto;\n  border-radius: 16px;\n  background: #3e85f3;\n  border: none;\n  color: #fff;\n  margin-top: 40px;\n  font-family: Inter;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: 1.29; /* 128.571% */\n  &:hover {\n    background-color: #2b78ef;\n  }\n  &:focus {\n    background-color: #2b78ef;\n  }\n  @media screen and (min-width: 768px) {\n    width: 262px;\n    height: 48px;\n    margin-top: 18px;\n  }\n  @media screen and (min-width: 768px) {\n    margin-top: 88px;\n  }\n`;\n\nexport const Error = styled.p`\n  font-family: Inter;\n  font-size: 10px;\n  font-weight: 400;\n  color: red;\n  position: absolute;\n  width: 400px;\n  bottom: -12px;\n  left: 10px;\n`;\n\nexport const FieldWrap = styled.div`\n  position: relative;\n`;\n\nexport const FieldWrapDate = styled.div`\n  position: relative;\n\n  .react-datepicker-wrapper {\n    width: 100%;\n  }\n`;\n\nexport const SVGWrap = styled.div`\n  width: 20px;\n  position: absolute;\n  bottom: 20px;\n  right: 0;\n  width: 200px;\n  height: 10px;\n  text-align: right;\n  padding-right: 20px;\n`;\n\nexport const StyledDeleteButton = styled.button`\n  position: absolute;\n  top: 24px;\n  right: 24px;\n  display: flex;\n  width: 28px;\n  heigh: 28px;\n  justify-content: center;\n  align-items: center;\n  background: rgb(234, 61, 101);\n  border-radius: 8px;\n  padding: 6px;\n  color: #f8f8f8;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 1.28;\n  border: 0;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n    transition: box-shadow 0.2s;\n  }\n\n  @media screen and (min-width: 768px) {\n    top: 32px;\n    right: 32px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    top: 48px;\n    right: 48px;\n  }\n`;\n\nexport const StyledDeleteIcon = styled.svg`\n  width: 16px;\n  height: 16px;\n  stroke: #ffffff;\n  fill: #ffffff;\n`;\n","import React from 'react';\nimport { Avatar } from './UserForm.styled';\n\nconst PreviewAvatar = ({ file }) => {\n  const [preview, setPreview] = React.useState(null);\n  const reader = new FileReader();\n  reader.readAsDataURL(file);\n\n  reader.onload = () => {\n    setPreview(reader.result);\n  };\n  return (\n    <>\n      <Avatar src={preview} alt=\"User avatar\" />\n    </>\n  );\n};\n\nexport default PreviewAvatar;\n","import {\n  BtnWrapper,\n  CancelBtn,\n  DeleteBtn,\n  TextDiv,\n} from 'components/DeleteForm/DeleteForm.styled';\nimport Modal from 'components/Modal/Modal';\nimport Checkmark from 'components/TaskForm/Checkmark/Checkmark';\nimport { useState } from 'react';\n\nimport { createPortal } from 'react-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { update } from 'redux/auth/authOperations';\nimport { selectTheme } from 'redux/header/headerSlice';\n\nconst ConfirmationModal = ({ values, closeModal }) => {\n  const dispatch = useDispatch();\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const theme = useSelector(selectTheme);\n\n  const submitForm = () => {\n    setIsSubmitted(true);\n    dispatch(update(values));\n    setTimeout(() => closeModal(), 1500);\n  };\n\n  return createPortal(\n    <Modal closeModal={closeModal}>\n      {isSubmitted ? (\n        <Checkmark />\n      ) : (\n        <>\n          <TextDiv\n            style={theme === 'dark' ? { color: '#fff' } : { color: '#000' }}\n          >\n            Do you want to save the changes?\n          </TextDiv>\n          <BtnWrapper>\n            <DeleteBtn onClick={submitForm}>Save</DeleteBtn>\n            <CancelBtn onClick={closeModal}>Cancel</CancelBtn>\n          </BtnWrapper>\n        </>\n      )}\n    </Modal>,\n    document.body\n  );\n};\n\nexport default ConfirmationModal;\n","import { Field, Form } from 'formik';\nimport styled from 'styled-components';\n\nexport const StyledTitle = styled.h2`\n  font-size: 24px;\n  text-align: center;\n  margin-bottom: 16px;\n  color: ${({ color }) => color || '#000'};\n`;\n\nexport const StyledWarningText = styled.p`\n  max-width: 320px;\n  text-align: center;\n  font-size: 16px;\n  line-height: 1.3;\n  /* color: #343434; */\n  color: ${({ color }) => color || '#343434'};\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 16px;\n`;\n\nexport const StyledForm = styled(Form)`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 16px;\n  padding-bottom: 8px;\n`;\n\nexport const StyledFormText = styled.p`\n  font-size: 14px;\n  color: ${({ color }) => color || '#343434'};\n`;\n\nexport const StyledField = styled(Field)`\n  padding-top: 14px;\n  padding-bottom: 14px;\n  padding-left: 14px;\n  font-family: Inter;\n  font-size: 14px;\n  font-weight: 400;\n  color: #111111;\n  border-radius: 8px;\n  border: 1px solid #dce3e599;\n\n  &.error {\n    border: 1px solid red;\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n\n  ::placeholder {\n    color: #dce3e5;\n  }\n`;\n\nexport const StyledButtonWrapper = styled.div`\n  max-width: 260px;\n  display: flex;\n  gap: 16px;\n`;\n\nexport const StyledButtonCancel = styled.button`\n  width: 120px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: #efefef;\n  border-radius: 8px;\n  padding: 10px;\n  color: #111;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 1.28;\n  border: 0;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n    transition: box-shadow 0.2s;\n  }\n`;\nexport const StyledButtonDelete = styled.button`\n  min-width: 120px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: rgb(234, 61, 101);\n  border-radius: 8px;\n  padding: 10px;\n  color: #ffffff;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 1.28;\n  border: 0;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n    transition: box-shadow 0.2s;\n  }\n`;\n\nexport const StyledErrorText = styled.p`\n  font-size: 14px;\n  color: red;\n`;\n","import Modal from 'components/Modal/Modal';\nimport { Formik } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteUser } from 'redux/auth/authOperations';\nimport * as Yup from 'yup';\nimport { useState } from 'react';\nimport {\n  StyledButtonCancel,\n  StyledButtonDelete,\n  StyledButtonWrapper,\n  StyledErrorText,\n  StyledField,\n  StyledForm,\n  StyledFormText,\n  StyledTitle,\n  StyledWarningText,\n} from './DeletionModal.styled';\nimport { selectUser } from 'redux/auth/authSelectors';\nimport { selectTheme } from 'redux/header/headerSlice';\n\nconst DeletionModal = ({ closeModal }) => {\n  const [error, setError] = useState(false);\n  const theme = useSelector(selectTheme);\n\n  const dispatch = useDispatch();\n\n  const user = useSelector(selectUser);\n  let emailSchema = Yup.object().shape({\n    email: Yup.string()\n      .trim()\n      .matches(\n        /^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/,\n        'Invalid email. Valid email contain xxx@xxx.xxx'\n      )\n      .required('Email is required field'),\n  });\n\n  const handleSubmit = async ({ email }) => {\n    if (email !== user.email) return setError(true);\n    setError(false);\n    dispatch(deleteUser(email));\n  };\n  return (\n    <Modal closeModal={closeModal}>\n      <>\n        <StyledTitle color={theme === 'dark' ? '#fff' : '#000'}>Warning!</StyledTitle>\n        <StyledWarningText color={theme === 'dark' ? '#fff' : '#343434'}>\n          Deleting your account can't be undone, and all data associated with it\n          will be lost.\n        </StyledWarningText>\n        <Formik\n          initialValues={{ email: '' }}\n          validationSchema={emailSchema}\n          validateOnChange={false}\n          validateOnBlur={false}\n          onSubmit={handleSubmit}\n        >\n          <StyledForm>\n            <StyledFormText color={theme === 'dark' ? '#fff' : '#343434'}>\n              Enter your email to confirm your action\n            </StyledFormText>\n            <div>\n              <StyledField\n                type=\"email\"\n                id=\"email\"\n                name=\"email\"\n                placeholder=\"Enter email\"\n                className={error ? 'error' : ''}\n              />\n              {error && <StyledErrorText>Invalid email</StyledErrorText>}\n            </div>\n\n            <StyledButtonWrapper>\n              <StyledButtonCancel type=\"button\" onClick={closeModal}>\n                Cancel\n              </StyledButtonCancel>\n              <StyledButtonDelete type=\"submit\">\n                Delete account\n              </StyledButtonDelete>\n            </StyledButtonWrapper>\n          </StyledForm>\n        </Formik>\n      </>\n    </Modal>\n  );\n};\n\nexport default DeletionModal;\n","import { format } from 'date-fns';\nimport DatePicker from 'react-datepicker';\nimport { Formik, useFormik } from 'formik';\nimport ValidSchema from 'helpers/ValidSchema.js';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { selectUser } from '../../redux/auth/authSelectors.js';\nimport {\n  Avatar,\n  BoxForm,\n  BtnUserForm,\n  Chevron,\n  Error,\n  FieldWrap,\n  FormaBox,\n  Icon,\n  IconDiv,\n  InputUserForm,\n  LabelAvatar,\n  LabelUserForm,\n  User,\n  UserFormBox,\n  UserName,\n  WhiteBox,\n  FieldWrapDate,\n  SVGWrap,\n  StyledDeleteButton,\n  StyledDeleteIcon,\n} from './UserForm.styled.jsx';\nimport { useRef } from 'react';\nimport PreviewAvatar from './PreviewAvatar.js';\nimport { selectTheme } from 'redux/header/headerSlice.js';\nimport { useState } from 'react';\n\nimport ConfirmationModal from './ConfirmationModal/ConfirmationModal.jsx';\nimport { useSelector } from 'react-redux';\nimport sprite from '../Pictures/sprite.svg';\nimport DeletionModal from './DeletionModal/DeletionModal.jsx';\n\nconst UserForm = () => {\n  const [showModal, setShowModal] = useState(false);\n  const [formValues, setFormValues] = useState(false);\n  const [isDeleting, setIsDeleting] = useState(false);\n\n  const isUser = useSelector(selectUser);\n  const theme = useSelector(selectTheme);\n\n  const fileRef = useRef(null);\n\n  const formik = useFormik({\n    initialValues: {\n      usrName: isUser.username ?? '',\n      phone: isUser.phone ?? '',\n      birthday: new Date(isUser.birthday),\n      skype: isUser.skype ?? '',\n      email: isUser.email ?? '',\n      file: isUser.file,\n    },\n    onSubmit: values => {\n      setShowModal(true);\n      var imagefile = document.getElementById('avatar');\n      const formatedDate = format(values.birthday, 'yyyy-MM-dd');\n      setFormValues({\n        ...values,\n        avatarURL: imagefile,\n        birthday: formatedDate,\n      });\n    },\n    validationSchema: ValidSchema,\n  });\n\n  const closeModal = () => setShowModal(false);\n\n  const Input = ({ onChange, placeholder, value, isSecure, id, onClick }) => (\n    <InputUserForm\n      bg={theme === 'dark' ? 'var(--color-choice-dark-no-active)' : '#fff'}\n      color={theme === 'dark' ? '#fff' : '#000'}\n      bordercolor={\n        theme === 'dark'\n          ? 'var(--color-field-names-dark)'\n          : 'rgba(17, 17, 17, 0.1)'\n      }\n      onChange={onChange}\n      placeholder={placeholder}\n      value={value}\n      isSecure={isSecure}\n      id={id}\n      onClick={onClick}\n    />\n  );\n\n  return (\n    <>\n      <Formik>\n        <FormaBox onSubmit={formik.handleSubmit}>\n          <UserFormBox\n            bg={\n              theme === 'dark' ? 'var(--color-choice-dark-no-active)' : '#fff'\n            }\n            color={theme === 'dark' ? 'var(--color-field-names-dark)' : '#000'}\n          >\n            <div>\n              <LabelAvatar htmlFor=\"avatar\">\n                {formik.values.file ? (\n                  <PreviewAvatar file={formik.values.file} />\n                ) : (\n                  <Avatar src={isUser.avatarURL} alt=\"User avatar\" />\n                )}\n\n                <IconDiv\n                  type=\"button\"\n                  onClick={() => {\n                    fileRef.current.click();\n                  }}\n                >\n                  <Icon />\n                </IconDiv>\n                <WhiteBox></WhiteBox>\n                <input\n                  ref={fileRef}\n                  id=\"avatar\"\n                  type=\"file\"\n                  hidden\n                  accept=\"image/*\"\n                  onChange={event => {\n                    formik.setFieldValue('file', event.target.files[0]);\n                  }}\n                  onBlur={formik.handleBlur}\n                  value={formik.values.avatar}\n                />\n              </LabelAvatar>\n              <UserName color={theme === 'dark' ? '#fff' : '#343434'}>\n                {isUser.username ?? 'User Name'}\n              </UserName>\n\n              <User\n                color={\n                  theme === 'dark' ? 'var(--color-field-names-dark)' : '#343434'\n                }\n              >\n                User\n              </User>\n            </div>\n            <BoxForm>\n              <FieldWrap>\n                <LabelUserForm htmlFor=\"usrName\">User Name</LabelUserForm>\n                <InputUserForm\n                  bg={\n                    theme === 'dark'\n                      ? 'var(--color-choice-dark-no-active)'\n                      : '#fff'\n                  }\n                  color={theme === 'dark' ? '#fff' : '#000'}\n                  bordercolor={\n                    theme === 'dark'\n                      ? 'var(--color-field-names-dark)'\n                      : 'rgba(17, 17, 17, 0.1)'\n                  }\n                  id=\"usrName\"\n                  name=\"usrName\"\n                  type=\"text\"\n                  onChange={formik.handleChange}\n                  onBlur={formik.handleBlur}\n                  value={formik.values.usrName}\n                  style={\n                    formik.touched.usrName &&\n                    formik.errors.usrName && { border: '1px solid red' }\n                  }\n                />\n                {formik.touched.usrName && formik.errors.usrName ? (\n                  <Error>{formik.errors.usrName}</Error>\n                ) : null}\n              </FieldWrap>\n              <FieldWrapDate>\n                <LabelUserForm htmlFor=\"birthday\">Birthday</LabelUserForm>\n                {/* <Input /> */}\n                <DatePicker\n                  id=\"birthday\"\n                  // selected={formik.values.birthday}\n                  name=\"birthday\"\n                  customInput={<Input inputRef={fileRef} />}\n                  onChange={date => formik.setFieldValue('birthday', date)}\n                  style={{ width: '100%' }}\n                />\n                <SVGWrap>\n                  <Chevron\n                    width=\"18\"\n                    height=\"18\"\n                    stroke={theme === 'dark' ? '#fff' : '#000'}\n                  >\n                    <use href={sprite + '#icon-chevron-down'}></use>\n                  </Chevron>\n                </SVGWrap>\n              </FieldWrapDate>\n              <FieldWrap>\n                <LabelUserForm htmlFor=\"email\">Email</LabelUserForm>\n                <InputUserForm\n                  bg={\n                    theme === 'dark'\n                      ? 'var(--color-choice-dark-no-active)'\n                      : '#fff'\n                  }\n                  color={theme === 'dark' ? '#fff' : '#000'}\n                  bordercolor={\n                    theme === 'dark'\n                      ? 'var(--color-field-names-dark)'\n                      : 'rgba(17, 17, 17, 0.1)'\n                  }\n                  id=\"email\"\n                  name=\"email\"\n                  type=\"email\"\n                  placeholder=\"Add your email\"\n                  onChange={formik.handleChange}\n                  onBlur={formik.handleBlur}\n                  value={formik.values.email}\n                  style={\n                    formik.touched.email &&\n                    formik.errors.email && { border: '1px solid red' }\n                  }\n                />\n                {formik.touched.email && formik.errors.email ? (\n                  <Error>{formik.errors.email}</Error>\n                ) : null}\n              </FieldWrap>\n              <FieldWrap>\n                <LabelUserForm htmlFor=\"phone\">Phone</LabelUserForm>\n                <InputUserForm\n                  bg={\n                    theme === 'dark'\n                      ? 'var(--color-choice-dark-no-active)'\n                      : '#fff'\n                  }\n                  color={theme === 'dark' ? '#fff' : '#000'}\n                  bordercolor={\n                    theme === 'dark'\n                      ? 'var(--color-field-names-dark)'\n                      : 'rgba(17, 17, 17, 0.1)'\n                  }\n                  style={\n                    formik.touched.phone &&\n                    formik.errors.phone && { border: '1px solid red' }\n                  }\n                  id=\"phone\"\n                  name=\"phone\"\n                  type=\"phone\"\n                  placeholder=\"Add a phone number\"\n                  onChange={formik.handleChange}\n                  onBlur={formik.handleBlur}\n                  value={formik.values.phone}\n                ></InputUserForm>\n                {formik.touched.phone && formik.errors.phone ? (\n                  <Error>{formik.errors.phone}</Error>\n                ) : null}\n              </FieldWrap>\n              <FieldWrap>\n                <LabelUserForm htmlFor=\"skype\">Skype</LabelUserForm>\n                <InputUserForm\n                  bg={\n                    theme === 'dark'\n                      ? 'var(--color-choice-dark-no-active)'\n                      : '#fff'\n                  }\n                  color={theme === 'dark' ? '#fff' : '#000'}\n                  bordercolor={\n                    theme === 'dark'\n                      ? 'var(--color-field-names-dark)'\n                      : 'rgba(17, 17, 17, 0.1)'\n                  }\n                  id=\"skype\"\n                  name=\"skype\"\n                  type=\"skype\"\n                  placeholder=\"Add a skype number\"\n                  onChange={formik.handleChange}\n                  onBlur={formik.handleBlur}\n                  value={formik.values.skype}\n                  style={\n                    formik.touched.skype &&\n                    formik.errors.skype && { border: '1px solid red' }\n                  }\n                ></InputUserForm>\n                {formik.touched.skype && formik.errors.skype ? (\n                  <Error>{formik.errors.skype}</Error>\n                ) : null}\n              </FieldWrap>\n            </BoxForm>\n            <BtnUserForm type=\"submit\">Save changes</BtnUserForm>\n            <StyledDeleteButton\n              type=\"button\"\n              onClick={() => {\n                setShowModal(!showModal);\n                setIsDeleting(true);\n              }}\n            >\n              <StyledDeleteIcon>\n                <use href={sprite + '#icon-trash'}></use>\n              </StyledDeleteIcon>\n            </StyledDeleteButton>\n          </UserFormBox>\n        </FormaBox>\n      </Formik>\n      {showModal && !isDeleting && (\n        <ConfirmationModal values={formValues} closeModal={closeModal} />\n      )}\n      {showModal && isDeleting && (\n        <DeletionModal\n          closeModal={() => {\n            closeModal();\n            setIsDeleting(false);\n          }}\n        />\n      )}\n    </>\n  );\n};\n\nexport default UserForm;\n","import React from 'react';\nimport MainLayout from '../../../components/MainLayout/MainLayout.jsx';\nimport { selectIsRefreshing } from 'redux/auth/authSelectors.js';\nimport { useSelector } from 'react-redux';\nimport Loader from 'components/Loader/Loader.jsx';\nimport UserForm from 'components/UserForm/UserForm.jsx';\nimport { HeaderContainer } from '../CalendarPage/CalendarPage.styled.jsx';\nimport Header from 'components/Header/Header.jsx';\nimport { CalendarContainer } from 'components/Calendar/common/index.js';\nimport { selectTheme } from 'redux/header/headerSlice.js';\n\nconst AccountPage = () => {\n  const IsRefreshing = useSelector(selectIsRefreshing);\n  const theme = useSelector(selectTheme);\n\n  return (\n    <MainLayout>\n      <CalendarContainer bgcolor={theme === 'dark' ? '#171820' : '#f7f6f9'}>\n        <HeaderContainer>\n          <Header pageName=\"My Account\" />\n        </HeaderContainer>\n        <UserForm />\n        {IsRefreshing && <Loader />}\n      </CalendarContainer>\n    </MainLayout>\n  );\n};\n\nexport default AccountPage;\n"],"names":["DeleteBtn","_styled","target","name","styles","CancelBtn","BtnWrapper","TextDiv","_require","require","Path","Circle","Svg","CheckmarkWrap","_jsx","children","_jsxs","xmlns","viewBox","width","height","cx","cy","r","fill","d","styled","_templateObject","_taggedTemplateLiteral","strokeAnimation","keyframes","_templateObject2","fillAnimation","_templateObject3","scaleAnimation","_templateObject4","_templateObject5","_templateObject6","_templateObject7","Yup","shape","usrName","max","required","phone","matches","birthday","skype","email","LabelAvatar","Icon","AiFillPlusCircle","Chevron","FormaBox","UserFormBox","_ref","bg","_ref2","color","BoxForm","Avatar","IconDiv","_templateObject8","WhiteBox","_templateObject9","UserName","_templateObject10","_ref3","User","_templateObject11","_ref4","LabelUserForm","_templateObject12","InputUserForm","_templateObject13","_ref5","_ref6","_ref7","bordercolor","BtnUserForm","_templateObject14","Error","_templateObject15","FieldWrap","_templateObject16","FieldWrapDate","_templateObject17","SVGWrap","_templateObject18","StyledDeleteButton","_templateObject19","StyledDeleteIcon","_templateObject20","file","_React$useState","React","_React$useState2","_slicedToArray","preview","setPreview","reader","FileReader","readAsDataURL","onload","result","_Fragment","src","alt","values","closeModal","dispatch","useDispatch","_useState","useState","_useState2","isSubmitted","setIsSubmitted","theme","useSelector","selectTheme","createPortal","Modal","Checkmark","style","onClick","update","setTimeout","document","body","StyledTitle","StyledWarningText","StyledForm","Form","StyledFormText","StyledField","Field","StyledButtonWrapper","StyledButtonCancel","StyledButtonDelete","StyledErrorText","error","setError","user","selectUser","emailSchema","trim","handleSubmit","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","abrupt","deleteUser","stop","_x","apply","arguments","Formik","initialValues","validationSchema","validateOnChange","validateOnBlur","onSubmit","type","id","placeholder","className","_isUser$username","_isUser$phone","_isUser$skype","_isUser$email","_isUser$username2","showModal","setShowModal","_useState3","_useState4","formValues","setFormValues","_useState5","_useState6","isDeleting","setIsDeleting","isUser","fileRef","useRef","formik","useFormik","username","Date","imagefile","getElementById","formatedDate","format","_objectSpread","avatarURL","ValidSchema","Input","onChange","value","isSecure","htmlFor","PreviewAvatar","current","click","ref","hidden","accept","event","setFieldValue","files","onBlur","handleBlur","avatar","handleChange","touched","errors","border","DatePicker","customInput","inputRef","date","stroke","href","sprite","ConfirmationModal","DeletionModal","IsRefreshing","selectIsRefreshing","MainLayout","CalendarContainer","bgcolor","HeaderContainer","Header","pageName","UserForm","Loader"],"sourceRoot":""}