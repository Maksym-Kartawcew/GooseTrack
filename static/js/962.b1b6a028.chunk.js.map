{"version":3,"file":"static/js/962.b1b6a028.chunk.js","mappings":"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","sources":["components/Statistics/CalendarDate/CalendarDate.jsx","components/Statistics/PeriodPaginator/PeriodPaginator.styled.jsx","components/Statistics/PeriodPaginator/PeriodPaginator.jsx","components/Statistics/StatisticsChart/StatisticsChart.styled.jsx","components/Statistics/StatisticsChart/StatisticsChart.jsx","pages/Private/StatisticsPage/StatisticsPage.jsx"],"sourcesContent":["import { useState } from 'react';\nimport { format } from 'date-fns';\nimport ReactDatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker-cssmodules.css';\nimport {\n  DatePickerButton,\n  DatePickerWrapper,\n  CalendarGlobalStyles,\n} from 'components/Calendar/common/NewCalendarDatePicker.styled';\n\nconst CalendarDate = ({ date, setDate }) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const handleClick = () => setIsOpen(!isOpen);\n\n  return (\n    <DatePickerWrapper>\n      <DatePickerButton type=\"button\" onClick={handleClick}>\n        {format(date, 'd MMM y')}\n      </DatePickerButton>\n      {isOpen && (\n        <>\n          <ReactDatePicker\n            selected={date}\n            onChange={newDate => {\n              setDate(newDate);\n              handleClick();\n            }}\n            allowSameDay={true}\n            inline\n            calendarStartDay={1}\n            dateFormat={'dd MMMM yyyy'}\n            formatWeekDay={day => day.substring(0, 1)}\n          />\n          <CalendarGlobalStyles />\n        </>\n      )}\n    </DatePickerWrapper>\n  );\n};\n\nexport default CalendarDate;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  @media screen and (max-width: 767px) {\n    /* width: 65%; */\n  }\n  @media screen and (min-width: 768px) {\n    justify-content: flex-start;\n\n    margin-bottom: 40px;\n  }\n  @media screen and (max-width: 1440px) {\n    margin-bottom: 40px;\n  }\n`;\n\nexport const TitleWrapper = styled.button`\n  width: 195px;\n  padding: 6px 12px;\n  border-radius: 8px;\n  background-color: #3e85f3;\n  color: #ffffff;\n  font-size: 14px;\n  font-weight: 700;\n  line-height: calc(18 / 14);\n  text-align: center;\n  text-transform: uppercase;\n\n  @media screen and (min-width: 768px) {\n    justify-content: space-around;\n    align-items: center;\n    padding: 8px 12px;\n    font-size: 16px;\n  }\n`;\n\nexport const ButtonsWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 8px;\n`;\n\nexport const ButtonLeft = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 5px 8px;\n  border: 1px solid ${({ bordercolor }) => bordercolor};\n  border-radius: 8px;\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n  background-color: ${({ bgcolor }) => bgcolor};\n  color: ${({ color }) => color};\n  font-size: 20px;\n  cursor: pointer;\n  transition: color 250ms;\n\n  &:hover {\n    color: ${({ hovercolor }) => hovercolor};\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 7px 9px;\n  }\n`;\n\nexport const ButtonRight = styled(ButtonLeft)`\n  border-radius: 8px;\n  border-top-left-radius: 0;\n  border-bottom-left-radius: 0;\n`;\n","import { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport CalendarDate from '../CalendarDate/CalendarDate';\nimport { selectTheme } from 'redux/header/headerSlice';\nimport { ChevronLeft, ChevronRight } from '../../Calendar/icons';\nimport {\n  Wrapper,\n  ButtonsWrapper,\n  ButtonLeft,\n  ButtonRight,\n} from '../PeriodPaginator/PeriodPaginator.styled';\n\nconst PeriodPaginator = ({ date, onClickPrev, onClickNext, setDate }) => {\n  const theme = useSelector(selectTheme);\n  return (\n    <Wrapper>\n      <CalendarDate date={date} setDate={setDate} />\n\n      <ButtonsWrapper>\n        <ButtonLeft\n          onClick={() => onClickPrev()}\n          bgcolor={theme === 'dark' ? '#21222c' : '#ffffff'}\n          bordercolor={\n            theme === 'dark'\n              ? 'rgba(255, 255, 255, 0.15)'\n              : 'rgba(220, 227, 229, 0.80)'\n          }\n          color={theme === 'dark' ? '#ffffff' : '#343434'}\n          hovercolor={\n            theme === 'dark'\n              ? 'rgba(255, 255, 255, 0.15)'\n              : 'rgba(220, 227, 229, 1)'\n          }\n        >\n          <ChevronRight width=\"18px\" height=\"18px\" />\n        </ButtonLeft>\n\n        <ButtonRight\n          onClick={() => onClickNext()}\n          bgcolor={theme === 'dark' ? '#21222C' : '#ffffff'}\n          bordercolor={\n            theme === 'dark'\n              ? 'rgba(255, 255, 255, 0.15)'\n              : 'rgba(220, 227, 229, 0.80)'\n          }\n          color={theme === 'dark' ? '#ffffff' : '#343434'}\n          hovercolor={\n            theme === 'dark'\n              ? 'rgba(255, 255, 255, 0.15)'\n              : 'rgba(220, 227, 229, 1)'\n          }\n        >\n          <ChevronLeft width=\"18px\" height=\"18px\" />\n        </ButtonRight>\n      </ButtonsWrapper>\n    </Wrapper>\n  );\n};\n\nexport default PeriodPaginator;\n\nPeriodPaginator.propTypes = {\n  // currentDateData: PropTypes.func,\n  // onClickPrev: PropTypes.func.isRequired,\n  // onClickNext: PropTypes.func.isRequired,\n  // type: PropTypes.string,\n  date: PropTypes.object,\n};\n","import styled from '@emotion/styled';\n\nexport const StatsPageBox = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  /* margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 46px; */\n  padding-top: 28px;\n  /* padding-left: 14px;\n  padding-right: 14px; */\n  padding-bottom: 135px;\n  border-radius: 16px;\n\n  background: ${({ bg }) => bg || 'var(--color-choice-dark-no-active)'};\n  color: ${({ color }) => color || '#000'};\n\n  @media screen and (min-width: 768px) {\n    padding-top: 132px;\n    /* padding-left: 32px;\n    padding-right: 32px; */\n    padding-bottom: 224px;\n  }\n  @media screen and (min-width: 1440px) {\n    padding-top: 134px;\n    /* padding-right: 113px;\n    padding-left: 113px; */\n    padding-bottom: 104px;\n  }\n`;\nexport const StatsContainer = styled.div`\n  /* margin-left: auto;\n  margin-right: auto; */\n  min-width: 307px;\n  margin-top: 80px;\n\n  border: 0.8px solid #e3f3ff;\n  border-radius: 29px;\n  @media screen and (max-width: 768px) {\n    /* max-width: 307px; */\n    height: auto;\n  }\n\n  @media screen and (min-width: 768px) {\n    max-width: 640px;\n    height: 424px;\n  }\n  @media screen and (min-width: 768px) {\n    max-width: 1065px;\n    height: auto;\n  }\n`;\nexport const WrapperDiagram = styled.svg`\n  max-width: 307px;\n  height: auto;\n\n  @media screen and (max-width: 767px) {\n    max-width: 640px;\n    height: auto;\n  }\n  @media screen and (min-width: 768px) {\n    max-width: 860px;\n    height: auto;\n  }\n`;\n","import { useSelector } from 'react-redux';\nimport { format } from 'date-fns';\nimport PeriodPaginator from '../PeriodPaginator/PeriodPaginator';\n\nimport {\n  Bar,\n  BarChart,\n  CartesianGrid,\n  LabelList,\n  Legend,\n  XAxis,\n  YAxis,\n} from 'recharts';\nimport { selectTasks } from 'redux/task/taskSelectors';\nimport { StatsContainer, StatsPageBox } from './StatisticsChart.styled';\nimport { useState } from 'react';\nimport { selectTheme } from 'redux/header/headerSlice';\n\nconst StatisticsChart = ({ date, onClickPrev, onClickNext, setDate }) => {\n  const isTasks = useSelector(selectTasks);\n  const theme = useSelector(selectTheme);\n\n  const parsedDate = format(date, 'yyyy-MM-dd');\n\n  const dateTask = isTasks\n    .filter(el => el.date === parsedDate)\n    .map(task => task.category);\n\n  const todoByDay = dateTask.filter(el => el.includes('to-do')).length;\n\n  const inprogressByDay = dateTask.filter(el =>\n    el.includes('in-progress')\n  ).length;\n\n  const doneByDay = dateTask.filter(el => el.includes('done')).length;\n\n  const allTasksByDay = todoByDay + inprogressByDay + doneByDay;\n\n  const todoByDayPercentages = Number(\n    ((todoByDay / allTasksByDay) * 100).toFixed(0)\n  );\n\n  const inprogressByDayPercentages = (\n    (inprogressByDay / allTasksByDay) *\n    100\n  ).toFixed(0);\n\n  const doneByDayPercentages = ((doneByDay / allTasksByDay) * 100).toFixed(0);\n\n  const dataCurrentMonth = {\n    categoryTask: isTasks.map(task => task.category),\n  };\n\n  const todoByMonth = dataCurrentMonth.categoryTask.filter(el =>\n    el.includes('to-do')\n  );\n\n  const inprogressByMonth = dataCurrentMonth.categoryTask.filter(el =>\n    el.includes('in-progress')\n  );\n\n  const doneByMonth = dataCurrentMonth.categoryTask.filter(el =>\n    el.includes('done')\n  );\n\n  const allTasksByMonth =\n    todoByMonth.length + inprogressByMonth.length + doneByMonth.length;\n\n  const todoByMonthPercentages = (\n    (todoByMonth.length / allTasksByMonth) *\n    100\n  ).toFixed(0);\n\n  const inprogressByMonthPercentages = (\n    (inprogressByMonth.length / allTasksByMonth) *\n    100\n  ).toFixed(0);\n\n  const doneByMonthPercentages = (\n    (doneByMonth.length / allTasksByMonth) *\n    100\n  ).toFixed(0);\n\n  const data = [\n    {\n      name: 'To Do',\n      'By Day': isNaN(todoByDayPercentages) === true ? 0 : todoByDayPercentages,\n      'By Month':\n        isNaN(todoByMonthPercentages) === true ? 0 : todoByMonthPercentages,\n    },\n    {\n      name: 'In Progress',\n      'By Day':\n        isNaN(inprogressByDayPercentages) === true\n          ? 0\n          : inprogressByDayPercentages,\n      'By Month':\n        isNaN(inprogressByMonthPercentages) === true\n          ? 0\n          : inprogressByMonthPercentages,\n    },\n    {\n      name: 'Done',\n      'By Day': isNaN(doneByDayPercentages) === true ? 0 : doneByDayPercentages,\n      'By Month':\n        isNaN(doneByMonthPercentages) === true ? 0 : doneByMonthPercentages,\n    },\n  ];\n\n  const [width, setWidth] = useState(window.innerWidth / 1.7);\n  window.addEventListener(\n    'resize',\n    event => {\n      setWidth(event.target.innerWidth / 1.7);\n    },\n    false\n  );\n\n  const size = width >= 307 ? width : 307;\n\n  return (\n    <StatsPageBox\n      bg={theme === 'dark' ? 'var(--color-choice-dark-no-active)' : '#fff'}\n      color={theme === 'dark' ? '#fff' : '#000'}\n    >\n      <div>\n        <PeriodPaginator\n          onClickPrev={onClickPrev}\n          onClickNext={onClickNext}\n          setDate={setDate}\n          date={date}\n        />\n        <StatsContainer>\n          <BarChart\n            width={size <= 1065 ? size : 1065}\n            height={440}\n            data={data}\n            margin={{ top: 77, right: 32, left: 32, bottom: 60 }}\n          >\n            <CartesianGrid vertical={false} stroke=\"#a5a5a5\" />\n            <XAxis\n              dataKey=\"name\"\n              axisLine={false}\n              tickLine={false}\n              fontSize={14}\n              fontFamily=\"Inter\"\n              tickMargin={width <= 335 ? 8 : 20}\n            />\n            {theme === 'light' ? (\n              <YAxis\n                domain={[0, 100]}\n                tickCount={6}\n                axisLine={false}\n                tickLine={false}\n                label={{\n                  value: 'Tasks',\n                  position: 'top',\n                  dx: -14,\n                  dy: -24,\n                  fontFamily: 'Inter',\n                  fontSize: 14,\n                  fontWeight: 600,\n                  fill: '#343434',\n                }}\n                tickMargin={32}\n                fontFamily=\"Inter\"\n                fontSize={14}\n              />\n            ) : (\n              <YAxis\n                domain={[0, 100]}\n                tickCount={6}\n                axisLine={false}\n                tickLine={false}\n                label={{\n                  value: 'Tasks',\n                  position: 'top',\n                  dx: -22,\n                  dy: -24,\n                  fontFamily: 'Inter',\n                  fontSize: 14,\n                  fontWeight: 600,\n                  fill: '#666',\n                }}\n                tickMargin={32}\n                fontFamily=\"Inter\"\n                fontSize={18}\n              />\n            )}\n            <Legend\n              wrapperStyle={{\n                width: 'auto',\n                position: 'absolute',\n                top: width * 1.7 > 768 ? -105 : -60,\n                right: 0,\n              }}\n              layout=\"horizontal\"\n              verticalAlign=\"top\"\n              align=\"end\"\n              iconSize={8}\n              iconType=\"circle\"\n              markerWidth={5}\n              fontSize={16}\n            />\n            <defs>\n              <linearGradient id=\"colorUv\" x1=\"0\" y1=\"1\" x2=\"0\" y2=\"0.2\">\n                <stop offset=\"50%\" stopColor=\"#ffd2dd\" stopOpacity={1} />\n                <stop\n                  offset=\"100%\"\n                  stopColor=\"rgb(255, 210, 221)\"\n                  stopOpacity={0.05}\n                />\n              </linearGradient>\n            </defs>\n            <defs>\n              <linearGradient id=\"colorXv\" x1=\"0\" y1=\"1\" x2=\"0\" y2=\"0.2\">\n                <stop offset=\"50%\" stopColor=\"#3E85F3\" stopOpacity={1} />\n                <stop\n                  offset=\"100%\"\n                  stopColor=\"rgb(62, 133, 243)\"\n                  stopOpacity={0.05}\n                />\n              </linearGradient>\n            </defs>\n            <Bar dataKey=\"By Day\" fill=\"url(#colorUv)\" barSize={22} radius={10}>\n              <LabelList\n                barCategoryGap={50}\n                dataKey=\"By Day\"\n                position=\"top\"\n                fill={theme === 'light' ? '#343434' : '#ffffff'}\n                style={{ fontWeight: 400, fontFamily: 'Inter', fontSize: 14 }}\n              />\n            </Bar>\n            <Bar\n              dataKey=\"By Month\"\n              fill=\"url(#colorXv)\"\n              barSize={22}\n              radius={10}\n            >\n              <LabelList\n                dataKey=\"By Month\"\n                position=\"top\"\n                fill={theme === 'light' ? '#343434' : '#ffffff'}\n                style={{ fontWeight: 400, fontFamily: 'Inter', fontSize: 14 }}\n              />\n            </Bar>\n          </BarChart>\n        </StatsContainer>\n      </div>\n    </StatsPageBox>\n  );\n};\n\nexport default StatisticsChart;\n","import { useEffect, useRef, useState } from 'react';\nimport { addDays, format, subDays } from 'date-fns';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport MainLayout from 'components/MainLayout/MainLayout';\nimport StatisticsChart from 'components/Statistics/StatisticsChart/StatisticsChart';\nimport { HeaderContainer } from '../CalendarPage/CalendarPage.styled';\nimport Header from 'components/Header/Header';\nimport { CalendarContainer } from 'components/Calendar/common';\nimport { getTasks } from 'redux/task/taskOperations';\nimport { selectTheme } from 'redux/header/headerSlice';\n\n// import { Link } from 'react-router-dom';\n// import { Circles } from 'react-loader-spinner'; //! Спинер\n\nconst StatisticsPage = () => {\n  const dispatch = useDispatch();\n  const [date, setDate] = useState(new Date());\n\n  const prevMonthRef = useRef(null);\n\n  useEffect(() => {\n    const currentMonth = format(date, 'MM');\n    if (prevMonthRef.current === currentMonth) return;\n    prevMonthRef.current = currentMonth;\n    dispatch(getTasks(format(date, 'yyyy-MM-dd').slice(0, 7)));\n  }, [dispatch, date]);\n\n  const handlePrev = () => {\n    setDate(subDays(date, 1));\n  };\n\n  const handleNext = () => {\n    setDate(addDays(date, 1));\n  };\n\n  const theme = useSelector(selectTheme);\n  return (\n    <MainLayout>\n      <CalendarContainer bgcolor={theme === 'dark' ? '#171820' : '#f7f6f9'}>\n        <HeaderContainer>\n          <Header pageName=\"Statistics\" />\n        </HeaderContainer>\n\n        <StatisticsChart\n          onClickPrev={handlePrev}\n          onClickNext={handleNext}\n          setDate={setDate}\n          date={date}\n        ></StatisticsChart>\n      </CalendarContainer>\n    </MainLayout>\n\n    // {isLoading && !error && (\n    //     <Circles\n    //       height=\"80\"\n    //       width=\"80\"\n    //       color=\"#4d78a9\"\n    //!       wrapperClass={css.loader}\n    //     />\n    //   )}\n  );\n};\n\nexport default StatisticsPage;\n\n// .loader {\n//     position: fixed;\n//     top: 0;\n//     width: 100%;\n//     height: 100%;\n//     display: flex;\n//     align-items: center;\n//     justify-content: center;\n//   }\n"],"names":["_ref","date","setDate","_useState","useState","_useState2","_slicedToArray","isOpen","setIsOpen","handleClick","_jsxs","DatePickerWrapper","children","_jsx","DatePickerButton","type","onClick","format","_Fragment","ReactDatePicker","selected","onChange","newDate","allowSameDay","inline","calendarStartDay","dateFormat","formatWeekDay","day","substring","CalendarGlobalStyles","Wrapper","styled","_templateObject","_taggedTemplateLiteral","ButtonsWrapper","_templateObject2","_templateObject3","ButtonLeft","_templateObject4","bordercolor","_ref2","bgcolor","_ref3","color","_ref4","hovercolor","ButtonRight","_templateObject5","onClickPrev","onClickNext","theme","useSelector","selectTheme","CalendarDate","ChevronRight","width","height","ChevronLeft","StatsPageBox","bg","StatsContainer","isTasks","selectTasks","parsedDate","dateTask","filter","el","map","task","category","todoByDay","includes","length","inprogressByDay","doneByDay","allTasksByDay","todoByDayPercentages","Number","toFixed","inprogressByDayPercentages","doneByDayPercentages","dataCurrentMonth","categoryTask","todoByMonth","inprogressByMonth","doneByMonth","allTasksByMonth","todoByMonthPercentages","inprogressByMonthPercentages","doneByMonthPercentages","data","name","isNaN","window","innerWidth","setWidth","addEventListener","event","target","size","PeriodPaginator","BarChart","margin","top","right","left","bottom","CartesianGrid","vertical","stroke","XAxis","dataKey","axisLine","tickLine","fontSize","fontFamily","tickMargin","YAxis","domain","tickCount","label","value","position","dx","dy","fontWeight","fill","Legend","wrapperStyle","layout","verticalAlign","align","iconSize","iconType","markerWidth","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","Bar","barSize","radius","LabelList","barCategoryGap","style","dispatch","useDispatch","Date","prevMonthRef","useRef","useEffect","currentMonth","current","getTasks","slice","MainLayout","CalendarContainer","HeaderContainer","Header","pageName","StatisticsChart","subDays","addDays"],"sourceRoot":""}